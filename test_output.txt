
> jddb@0.1.0 test:unit
> vitest run


[1m[46m RUN [49m[22m [36mv3.2.4 [39m[90mC:/JDDB[39m

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mtestConnection[2m > [22m[2mshould return true when API is reachable
[22m[39m[2025-10-11T23:52:14.416Z] [DEBUG] 🌐 API Request starting: GET http://localhost:8000/api/health 
[2025-10-11T23:52:14.417Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:14.418Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:14.418Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/health 
[2025-10-11T23:52:14.418Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/health'[39m,
  method: [32m'GET'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mfalse[39m,
  bodyType: [32m'none'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mtestConnection[2m > [22m[2mshould return true when API is reachable
[22m[39m[2025-10-11T23:52:14.419Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/health'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:14.420Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mtestConnection[2m > [22m[2mshould return true when API is reachable
[22m[39m[2025-10-11T23:52:14.420Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/health { status: [32m'healthy'[39m }

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mtestConnection[2m > [22m[2mshould return false when API is unreachable
[22m[39m[2025-10-11T23:52:14.422Z] [DEBUG] 🌐 API Request starting: GET http://localhost:8000/api/health 
[2025-10-11T23:52:14.422Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:14.423Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:14.423Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/health 
[2025-10-11T23:52:14.423Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/health'[39m,
  method: [32m'GET'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mfalse[39m,
  bodyType: [32m'none'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mtestConnection[2m > [22m[2mshould return false when API is unreachable
[22m[39m[2025-10-11T23:52:14.435Z] [DEBUG] ❌ Fetch error caught: {
  name: [32m'Error'[39m,
  message: [32m'Network error'[39m,
  stack: [32m'Error: Network error\n'[39m +
    [32m'    at C:\\JDDB\\src\\lib\\api.test.ts:88:39\n'[39m +
    [32m'    at file:///C:/JDDB/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11'[39m
}
[2025-10-11T23:52:14.436Z] [DEBUG] 🔄 Error is retryable: 
[2025-10-11T23:52:14.436Z] [DEBUG] ❌ Throwing final error - no more retries or not retryable 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mtestConnection[2m > [22m[2mshould return false when API returns error status
[22m[39m[2025-10-11T23:52:14.438Z] [DEBUG] 🌐 API Request starting: GET http://localhost:8000/api/health 
[2025-10-11T23:52:14.438Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:14.438Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:14.438Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/health 
[2025-10-11T23:52:14.438Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/health'[39m,
  method: [32m'GET'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mfalse[39m,
  bodyType: [32m'none'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mtestConnection[2m > [22m[2mshould return false when API returns error status
[22m[39m[2025-10-11T23:52:14.438Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/health'[39m,
  status: [33m500[39m,
  statusText: [32m'OK'[39m,
  ok: [33mfalse[39m,
  headers: {}
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mtestConnection[2m > [22m[2mshould return false when API returns error status
[22m[39m[2025-10-11T23:52:14.439Z] [DEBUG] ❌ Error response data: { error: [32m'Server error'[39m }
[2025-10-11T23:52:14.439Z] [DEBUG] ❌ API Error created: {
  message: [32m'HTTP 500: OK'[39m,
  status: [33m500[39m,
  isRetryable: [33mtrue[39m,
  attempt: [33m0[39m,
  maxRetries: [33m3[39m
}
[2025-10-11T23:52:14.439Z] [DEBUG] 🔄 Will retry after 500ms 

 [31m❯[39m src/components/ui/skeleton.test.tsx [2m([22m[2m8 tests[22m[2m | [22m[31m2 failed[39m[2m)[22m[33m 378[2mms[22m[39m
   [32m✓[39m Skeleton Components[2m > [22mSkeleton[2m > [22mrenders with correct width, height, and rounded styles[32m 204[2mms[22m[39m
   [32m✓[39m Skeleton Components[2m > [22mSkeletonText[2m > [22mrenders the correct number of lines[32m 16[2mms[22m[39m
   [32m✓[39m Skeleton Components[2m > [22mSkeletonCard[2m > [22mrenders with or without actions[32m 15[2mms[22m[39m
   [32m✓[39m Skeleton Components[2m > [22mSkeletonStats[2m > [22mrenders the correct number of stats cards[32m 11[2mms[22m[39m
   [32m✓[39m Skeleton Components[2m > [22mSkeletonJobCard[2m > [22mrenders the basic structure of a job card[32m 6[2mms[22m[39m
[31m   [31m×[31m Skeleton Components[2m > [22mSkeletonList[2m > [22mrenders the correct number of skeleton job cards[39m[32m 26[2mms[22m[39m
[31m     → expected <div …(1)>…(2)</div>
…(8) to have a length of 3 but got 9[39m
   [32m✓[39m Skeleton Components[2m > [22mSkeletonTable[2m > [22mrenders the correct number of rows[32m 8[2mms[22m[39m
[31m   [31m×[31m Skeleton Components[2m > [22mSkeletonLoader[2m > [22mrenders the correct skeleton based on the type prop[39m[32m 88[2mms[22m[39m
[31m     → [2mexpect([22m[31mreceived[31m[2m).toBeInTheDocument()[22m

[31mreceived[31m value must be an HTMLElement or an SVGElement.
Received has type:  Null
Received has value: [31mnull[31m[39m
[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mtestConnection[2m > [22m[2mshould return false when API returns error status
[22m[39m[2025-10-11T23:52:14.949Z] [DEBUG] 🔄 Attempt 2/4 for http://localhost:8000/api/health 
[2025-10-11T23:52:14.949Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/health'[39m,
  method: [32m'GET'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mfalse[39m,
  bodyType: [32m'none'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mtestConnection[2m > [22m[2mshould return false when API returns error status
[22m[39m[2025-10-11T23:52:14.950Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/health'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:14.950Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mtestConnection[2m > [22m[2mshould return false when API returns error status
[22m[39m[2025-10-11T23:52:14.950Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/health {}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mgetJobs[2m > [22m[2mshould fetch jobs successfully
[22m[39m[2025-10-11T23:52:14.960Z] [DEBUG] 🌐 API Request starting: GET http://localhost:8000/api/jobs?skip=0&limit=100 
[2025-10-11T23:52:14.960Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:14.960Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:14.960Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/jobs?skip=0&limit=100 
[2025-10-11T23:52:14.960Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/jobs?skip=0&limit=100'[39m,
  method: [32m'GET'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mfalse[39m,
  bodyType: [32m'none'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mgetJobs[2m > [22m[2mshould fetch jobs successfully
[22m[39m[2025-10-11T23:52:14.961Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/jobs?skip=0&limit=100'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:14.961Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mgetJobs[2m > [22m[2mshould fetch jobs successfully
[22m[39m[2025-10-11T23:52:14.961Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/jobs?skip=0&limit=100 {
  jobs: [
    {
      id: [33m1[39m,
      job_number: [32m'123456'[39m,
      title: [32m'Test Job'[39m,
      classification: [32m'EX-01'[39m,
      language: [32m'EN'[39m,
      file_path: [32m'/path/to/file'[39m,
      file_hash: [32m'hash123'[39m
    }
  ],
  pagination: { skip: [33m0[39m, limit: [33m100[39m, total: [33m1[39m, has_more: [33mfalse[39m }
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mgetJobs[2m > [22m[2mshould handle pagination parameters
[22m[39m[2025-10-11T23:52:14.966Z] [DEBUG] 🌐 API Request starting: GET http://localhost:8000/api/jobs?skip=20&limit=20 
[2025-10-11T23:52:14.966Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:14.966Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:14.966Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/jobs?skip=20&limit=20 
[2025-10-11T23:52:14.966Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/jobs?skip=20&limit=20'[39m,
  method: [32m'GET'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mfalse[39m,
  bodyType: [32m'none'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mgetJobs[2m > [22m[2mshould handle pagination parameters
[22m[39m[2025-10-11T23:52:14.967Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/jobs?skip=20&limit=20'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:14.967Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mgetJobs[2m > [22m[2mshould handle pagination parameters
[22m[39m[2025-10-11T23:52:14.967Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/jobs?skip=20&limit=20 {
  jobs: [
    {
      id: [33m1[39m,
      job_number: [32m'123456'[39m,
      title: [32m'Test Job'[39m,
      classification: [32m'EX-01'[39m,
      language: [32m'EN'[39m,
      file_path: [32m'/path/to/file'[39m,
      file_hash: [32m'hash123'[39m
    }
  ],
  pagination: { skip: [33m0[39m, limit: [33m100[39m, total: [33m1[39m, has_more: [33mfalse[39m }
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mgetJobs[2m > [22m[2mshould handle search parameters
[22m[39m[2025-10-11T23:52:14.970Z] [DEBUG] 🌐 API Request starting: GET http://localhost:8000/api/jobs?skip=0&limit=100&classification=EX-01&language=EN 
[2025-10-11T23:52:14.970Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:14.970Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:14.970Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/jobs?skip=0&limit=100&classification=EX-01&language=EN 
[2025-10-11T23:52:14.970Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/jobs?skip=0&limit=100&classification=EX-01&language=EN'[39m,
  method: [32m'GET'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mfalse[39m,
  bodyType: [32m'none'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mgetJobs[2m > [22m[2mshould handle search parameters
[22m[39m[2025-10-11T23:52:14.971Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/jobs?skip=0&limit=100&classification=EX-01&language=EN'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:14.971Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mgetJobs[2m > [22m[2mshould handle search parameters
[22m[39m[2025-10-11T23:52:14.971Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/jobs?skip=0&limit=100&classification=EX-01&language=EN {
  jobs: [
    {
      id: [33m1[39m,
      job_number: [32m'123456'[39m,
      title: [32m'Test Job'[39m,
      classification: [32m'EX-01'[39m,
      language: [32m'EN'[39m,
      file_path: [32m'/path/to/file'[39m,
      file_hash: [32m'hash123'[39m
    }
  ],
  pagination: { skip: [33m0[39m, limit: [33m100[39m, total: [33m1[39m, has_more: [33mfalse[39m }
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mgetJobs[2m > [22m[2mshould throw error when API request fails
[22m[39m[2025-10-11T23:52:14.975Z] [DEBUG] 🌐 API Request starting: GET http://localhost:8000/api/jobs?skip=0&limit=100 
[2025-10-11T23:52:14.975Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:14.975Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:14.975Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/jobs?skip=0&limit=100 
[2025-10-11T23:52:14.975Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/jobs?skip=0&limit=100'[39m,
  method: [32m'GET'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mfalse[39m,
  bodyType: [32m'none'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mgetJobs[2m > [22m[2mshould throw error when API request fails
[22m[39m[2025-10-11T23:52:14.978Z] [DEBUG] ❌ Fetch error caught: {
  name: [32m'Error'[39m,
  message: [32m'Server error'[39m,
  stack: [32m'Error: Server error\n'[39m +
    [32m'    at C:\\JDDB\\src\\lib\\api.test.ts:187:39\n'[39m +
    [32m'    at file:///C:/JDDB/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11'[39m
}
[2025-10-11T23:52:14.978Z] [DEBUG] 🔄 Error is retryable: 
[2025-10-11T23:52:14.978Z] [DEBUG] ❌ Throwing final error - no more retries or not retryable 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mgetJobById[2m > [22m[2mshould fetch job by ID successfully
[22m[39m[2025-10-11T23:52:14.987Z] [DEBUG] 🌐 API Request starting: GET http://localhost:8000/api/jobs/1?include_skills=true 
[2025-10-11T23:52:14.987Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:14.988Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:14.988Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/jobs/1?include_skills=true 
[2025-10-11T23:52:14.988Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/jobs/1?include_skills=true'[39m,
  method: [32m'GET'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mfalse[39m,
  bodyType: [32m'none'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mgetJobById[2m > [22m[2mshould fetch job by ID successfully
[22m[39m[2025-10-11T23:52:14.988Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/jobs/1?include_skills=true'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:14.988Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mgetJobById[2m > [22m[2mshould fetch job by ID successfully
[22m[39m[2025-10-11T23:52:14.988Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/jobs/1?include_skills=true {
  id: [33m1[39m,
  job_number: [32m'123456'[39m,
  title: [32m'Test Job'[39m,
  classification: [32m'EX-01'[39m,
  language: [32m'EN'[39m,
  file_path: [32m'/path/to/file'[39m,
  file_hash: [32m'hash123'[39m,
  sections: [],
  job_metadata: [1mnull[22m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mgetJobById[2m > [22m[2mshould handle not found error
[22m[39m[2025-10-11T23:52:14.992Z] [DEBUG] 🌐 API Request starting: GET http://localhost:8000/api/jobs/999?include_skills=true 
[2025-10-11T23:52:14.992Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:14.992Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:14.992Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/jobs/999?include_skills=true 
[2025-10-11T23:52:14.993Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/jobs/999?include_skills=true'[39m,
  method: [32m'GET'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mfalse[39m,
  bodyType: [32m'none'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mgetJobById[2m > [22m[2mshould handle not found error
[22m[39m[2025-10-11T23:52:14.994Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/jobs/999?include_skills=true'[39m,
  status: [33m404[39m,
  statusText: [32m'Not Found'[39m,
  ok: [33mfalse[39m,
  headers: {}
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mgetJobById[2m > [22m[2mshould handle not found error
[22m[39m[2025-10-11T23:52:14.994Z] [DEBUG] ❌ Error response data: { detail: [32m'HTTP 404: Not Found'[39m }
[2025-10-11T23:52:14.994Z] [DEBUG] ❌ API Error created: {
  message: [32m'HTTP 404: Not Found'[39m,
  status: [33m404[39m,
  isRetryable: [33mfalse[39m,
  attempt: [33m0[39m,
  maxRetries: [33m3[39m
}
[2025-10-11T23:52:14.994Z] [DEBUG] ❌ Throwing error - no more retries or not retryable 
[2025-10-11T23:52:14.998Z] [DEBUG] ❌ Fetch error caught: {
  name: [32m'ApiError'[39m,
  message: [32m'HTTP 404: Not Found'[39m,
  stack: [32m'ApiError: HTTP 404: Not Found\n'[39m +
    [32m'    at JDDBApiClient.request (C:\\JDDB\\src\\lib\\api.ts:324:25)\n'[39m +
    [32m'    at C:\\JDDB\\src\\lib\\api.test.ts:229:7'[39m
}
[2025-10-11T23:52:14.998Z] [DEBUG] 🔄 Error is retryable: 
[2025-10-11T23:52:14.998Z] [DEBUG] ❌ Throwing final error - no more retries or not retryable 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2muploadFile[2m > [22m[2mshould upload file successfully
[22m[39m[2025-10-11T23:52:15.005Z] [DEBUG] 🌐 API Request starting: POST http://localhost:8000/api/ingestion/upload 
[2025-10-11T23:52:15.005Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.005Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.006Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/ingestion/upload 
[2025-10-11T23:52:15.006Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/ingestion/upload'[39m,
  method: [32m'POST'[39m,
  headers: { Accept: [32m'application/json'[39m },
  hasBody: [33mtrue[39m,
  bodyType: [32m'FormData'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2muploadFile[2m > [22m[2mshould upload file successfully
[22m[39m[2025-10-11T23:52:15.006Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/ingestion/upload'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:15.006Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2muploadFile[2m > [22m[2mshould upload file successfully
[22m[39m[2025-10-11T23:52:15.006Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/ingestion/upload {
  status: [32m'success'[39m,
  filename: [32m'test.txt'[39m,
  processing_result: {
    status: [32m'success'[39m,
    file_info: { filename: [32m'test.txt'[39m, file_size: [33m12[39m, file_hash: [32m'hash123'[39m },
    processed_content: {
      sections_found: [33m2[39m,
      sections: [36m[Array][39m,
      structured_fields: [36m[Object][39m,
      chunks_generated: [33m5[39m,
      processing_errors: []
    },
    job_id: [33m1[39m,
    message: [32m'File processed successfully'[39m,
    errors: []
  }
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2muploadFile[2m > [22m[2mshould handle upload failure
[22m[39m[2025-10-11T23:52:15.009Z] [DEBUG] 🌐 API Request starting: POST http://localhost:8000/api/ingestion/upload 
[2025-10-11T23:52:15.009Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.009Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.009Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/ingestion/upload 
[2025-10-11T23:52:15.009Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/ingestion/upload'[39m,
  method: [32m'POST'[39m,
  headers: { Accept: [32m'application/json'[39m },
  hasBody: [33mtrue[39m,
  bodyType: [32m'FormData'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2muploadFile[2m > [22m[2mshould handle upload failure
[22m[39m[2025-10-11T23:52:15.009Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/ingestion/upload'[39m,
  status: [33m400[39m,
  statusText: [32m'Bad Request'[39m,
  ok: [33mfalse[39m,
  headers: {}
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2muploadFile[2m > [22m[2mshould handle upload failure
[22m[39m[2025-10-11T23:52:15.010Z] [DEBUG] ❌ Error response data: {}
[2025-10-11T23:52:15.010Z] [DEBUG] ❌ API Error created: {
  message: [32m'HTTP 400: Bad Request'[39m,
  status: [33m400[39m,
  isRetryable: [33mfalse[39m,
  attempt: [33m0[39m,
  maxRetries: [33m3[39m
}
[2025-10-11T23:52:15.010Z] [DEBUG] ❌ Throwing error - no more retries or not retryable 
[2025-10-11T23:52:15.010Z] [DEBUG] ❌ Fetch error caught: {
  name: [32m'ApiError'[39m,
  message: [32m'HTTP 400: Bad Request'[39m,
  stack: [32m'ApiError: HTTP 400: Bad Request\n'[39m +
    [32m'    at JDDBApiClient.request (C:\\JDDB\\src\\lib\\api.ts:324:25)\n'[39m +
    [32m'    at C:\\JDDB\\src\\lib\\api.test.ts:292:7'[39m
}
[2025-10-11T23:52:15.011Z] [DEBUG] 🔄 Error is retryable: 
[2025-10-11T23:52:15.011Z] [DEBUG] ❌ Throwing final error - no more retries or not retryable 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2msearchJobs[2m > [22m[2mshould search jobs successfully
[22m[39m[2025-10-11T23:52:15.012Z] [DEBUG] 🌐 API Request starting: POST http://localhost:8000/api/search/ 
[2025-10-11T23:52:15.012Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.012Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.012Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/search/ 
[2025-10-11T23:52:15.012Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/search/'[39m,
  method: [32m'POST'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mtrue[39m,
  bodyType: [32m'String'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2msearchJobs[2m > [22m[2mshould search jobs successfully
[22m[39m[2025-10-11T23:52:15.013Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/search/'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:15.013Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2msearchJobs[2m > [22m[2mshould search jobs successfully
[22m[39m[2025-10-11T23:52:15.013Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/search/ {
  query: [32m'director'[39m,
  total_results: [33m1[39m,
  results: [
    {
      job_id: [33m1[39m,
      job_number: [32m'123456'[39m,
      title: [32m'Director, Business Analysis'[39m,
      classification: [32m'EX-01'[39m,
      language: [32m'EN'[39m,
      relevance_score: [33m0.95[39m,
      matching_sections: [36m[Array][39m,
      snippet: [32m'Test snippet...'[39m
    }
  ]
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2msearchJobs[2m > [22m[2mshould handle advanced search parameters
[22m[39m[2025-10-11T23:52:15.014Z] [DEBUG] 🌐 API Request starting: POST http://localhost:8000/api/search/ 
[2025-10-11T23:52:15.014Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.014Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.015Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/search/ 
[2025-10-11T23:52:15.015Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/search/'[39m,
  method: [32m'POST'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mtrue[39m,
  bodyType: [32m'String'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2msearchJobs[2m > [22m[2mshould handle advanced search parameters
[22m[39m[2025-10-11T23:52:15.015Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/search/'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:15.015Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2msearchJobs[2m > [22m[2mshould handle advanced search parameters
[22m[39m[2025-10-11T23:52:15.015Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/search/ {
  query: [32m'director'[39m,
  total_results: [33m1[39m,
  results: [
    {
      job_id: [33m1[39m,
      job_number: [32m'123456'[39m,
      title: [32m'Director, Business Analysis'[39m,
      classification: [32m'EX-01'[39m,
      language: [32m'EN'[39m,
      relevance_score: [33m0.95[39m,
      matching_sections: [36m[Array][39m,
      snippet: [32m'Test snippet...'[39m
    }
  ]
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mcompareJobs[2m > [22m[2mshould compare jobs successfully
[22m[39m[2025-10-11T23:52:15.017Z] [DEBUG] 🌐 API Request starting: GET http://localhost:8000/api/search/compare/1/2 
[2025-10-11T23:52:15.017Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.017Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.017Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/search/compare/1/2 
[2025-10-11T23:52:15.017Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/search/compare/1/2'[39m,
  method: [32m'GET'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mfalse[39m,
  bodyType: [32m'none'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mcompareJobs[2m > [22m[2mshould compare jobs successfully
[22m[39m[2025-10-11T23:52:15.018Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/search/compare/1/2'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:15.018Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mcompareJobs[2m > [22m[2mshould compare jobs successfully
[22m[39m[2025-10-11T23:52:15.018Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/search/compare/1/2 {
  comparison_id: [32m'comp-123'[39m,
  jobs: {
    job1: {
      id: [33m1[39m,
      job_number: [32m'123456'[39m,
      title: [32m'Job A'[39m,
      classification: [32m'EX-01'[39m,
      language: [32m'EN'[39m
    },
    job2: {
      id: [33m2[39m,
      job_number: [32m'654321'[39m,
      title: [32m'Job B'[39m,
      classification: [32m'EX-02'[39m,
      language: [32m'EN'[39m
    }
  },
  similarity_analysis: {
    overall_similarity: [33m0.85[39m,
    similarity_level: [32m'high'[39m,
    metadata_comparison: {
      classification: [36m[Object][39m,
      language: [36m[Object][39m,
      title_similarity: [33m0.7[39m
    },
    section_comparison: [ [36m[Object][39m ]
  },
  recommendations: [ [32m'Consider similar responsibilities'[39m ]
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mgetJobStatistics[2m > [22m[2mshould fetch statistics successfully
[22m[39m[2025-10-11T23:52:15.020Z] [DEBUG] 🌐 API Request starting: GET http://localhost:8000/api/ingestion/stats 
[2025-10-11T23:52:15.020Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.020Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.020Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/ingestion/stats 
[2025-10-11T23:52:15.020Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/ingestion/stats'[39m,
  method: [32m'GET'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mfalse[39m,
  bodyType: [32m'none'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mgetJobStatistics[2m > [22m[2mshould fetch statistics successfully
[22m[39m[2025-10-11T23:52:15.020Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/ingestion/stats'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:15.020Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mgetJobStatistics[2m > [22m[2mshould fetch statistics successfully
[22m[39m[2025-10-11T23:52:15.021Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/ingestion/stats {
  total_jobs: [33m100[39m,
  by_classification: { [32m'EX-01'[39m: [33m60[39m, [32m'EX-02'[39m: [33m30[39m, [32m'EX-03'[39m: [33m10[39m },
  by_language: { EN: [33m80[39m, FR: [33m20[39m },
  processing_status: {
    completed: [33m90[39m,
    partial: [33m8[39m,
    needs_embeddings: [33m2[39m,
    needs_sections: [33m0[39m,
    needs_metadata: [33m0[39m
  },
  embedding_stats: {
    total_chunks: [33m500[39m,
    embedded_chunks: [33m490[39m,
    embedding_completion_rate: [33m98[39m,
    jobs_with_embeddings: [33m98[39m
  },
  content_quality: {
    jobs_with_sections: [33m95[39m,
    jobs_with_metadata: [33m85[39m,
    jobs_with_embeddings: [33m98[39m,
    section_coverage_rate: [33m95[39m,
    metadata_coverage_rate: [33m85[39m,
    embedding_coverage_rate: [33m98[39m
  },
  section_distribution: {
    GENERAL_ACCOUNTABILITY: [33m100[39m,
    SPECIFIC_ACCOUNTABILITIES: [33m98[39m,
    KNOWLEDGE_SKILLS: [33m95[39m
  },
  recent_activity: { jobs_last_7_days: [33m5[39m, daily_average: [33m0.7[39m },
  last_updated: [32m'2024-01-01T00:00:00Z'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2merror handling[2m > [22m[2mshould handle network errors
[22m[39m[2025-10-11T23:52:15.023Z] [DEBUG] 🌐 API Request starting: GET http://localhost:8000/api/jobs?skip=0&limit=100 
[2025-10-11T23:52:15.023Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.023Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.023Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/jobs?skip=0&limit=100 
[2025-10-11T23:52:15.023Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/jobs?skip=0&limit=100'[39m,
  method: [32m'GET'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mfalse[39m,
  bodyType: [32m'none'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2merror handling[2m > [22m[2mshould handle network errors
[22m[39m[2025-10-11T23:52:15.024Z] [DEBUG] ❌ Fetch error caught: {
  name: [32m'Error'[39m,
  message: [32m'Network error'[39m,
  stack: [32m'Error: Network error\n'[39m +
    [32m'    at C:\\JDDB\\src\\lib\\api.test.ts:502:39\n'[39m +
    [32m'    at file:///C:/JDDB/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11'[39m
}
[2025-10-11T23:52:15.024Z] [DEBUG] 🔄 Error is retryable: 
[2025-10-11T23:52:15.024Z] [DEBUG] ❌ Throwing final error - no more retries or not retryable 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2merror handling[2m > [22m[2mshould handle timeout errors
[22m[39m[2025-10-11T23:52:15.027Z] [DEBUG] 🌐 API Request starting: GET http://localhost:8000/api/jobs?skip=0&limit=100 
[2025-10-11T23:52:15.027Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.027Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.027Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/jobs?skip=0&limit=100 
[2025-10-11T23:52:15.027Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/jobs?skip=0&limit=100'[39m,
  method: [32m'GET'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mfalse[39m,
  bodyType: [32m'none'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2merror handling[2m > [22m[2mshould handle timeout errors
[22m[39m[2025-10-11T23:52:15.028Z] [DEBUG] ❌ Fetch error caught: {
  name: [32m'Error'[39m,
  message: [32m'The operation timed out'[39m,
  stack: [32m'Error: The operation timed out\n'[39m +
    [32m'    at C:\\JDDB\\src\\lib\\api.test.ts:508:39\n'[39m +
    [32m'    at file:///C:/JDDB/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11'[39m
}
[2025-10-11T23:52:15.028Z] [DEBUG] 🔄 Error is retryable: 
[2025-10-11T23:52:15.028Z] [DEBUG] ❌ Throwing final error - no more retries or not retryable 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2merror handling[2m > [22m[2mshould handle JSON parsing errors
[22m[39m[2025-10-11T23:52:15.029Z] [DEBUG] 🌐 API Request starting: GET http://localhost:8000/api/jobs?skip=0&limit=100 
[2025-10-11T23:52:15.029Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.030Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.030Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/jobs?skip=0&limit=100 
[2025-10-11T23:52:15.030Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/jobs?skip=0&limit=100'[39m,
  method: [32m'GET'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mfalse[39m,
  bodyType: [32m'none'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2merror handling[2m > [22m[2mshould handle JSON parsing errors
[22m[39m[2025-10-11T23:52:15.030Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/jobs?skip=0&limit=100'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:15.030Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2merror handling[2m > [22m[2mshould handle JSON parsing errors
[22m[39m[2025-10-11T23:52:15.031Z] [DEBUG] ❌ Fetch error caught: {
  name: [32m'Error'[39m,
  message: [32m'Invalid JSON'[39m,
  stack: [32m'Error: Invalid JSON\n'[39m +
    [32m'    at Object.json (C:\\JDDB\\src\\lib\\api.test.ts:519:17)\n'[39m +
    [32m'    at JDDBApiClient.request (C:\\JDDB\\src\\lib\\api.ts:353:39)'[39m
}
[2025-10-11T23:52:15.031Z] [DEBUG] 🔄 Error is retryable: 
[2025-10-11T23:52:15.031Z] [DEBUG] ❌ Throwing final error - no more retries or not retryable 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mretry logic[2m > [22m[2mshould retry on 5xx errors
[22m[39m[2025-10-11T23:52:15.032Z] [DEBUG] 🌐 API Request starting: GET http://localhost:8000/api/jobs?skip=0&limit=100 
[2025-10-11T23:52:15.032Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.033Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.033Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/jobs?skip=0&limit=100 
[2025-10-11T23:52:15.033Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/jobs?skip=0&limit=100'[39m,
  method: [32m'GET'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mfalse[39m,
  bodyType: [32m'none'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mretry logic[2m > [22m[2mshould retry on 5xx errors
[22m[39m[2025-10-11T23:52:15.033Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/jobs?skip=0&limit=100'[39m,
  status: [33m500[39m,
  statusText: [32m'Internal Server Error'[39m,
  ok: [33mfalse[39m,
  headers: {}
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mretry logic[2m > [22m[2mshould retry on 5xx errors
[22m[39m[2025-10-11T23:52:15.034Z] [DEBUG] ❌ Error response data: { detail: [32m'Server error'[39m }
[2025-10-11T23:52:15.034Z] [DEBUG] ❌ API Error created: {
  message: [32m'Server error'[39m,
  status: [33m500[39m,
  isRetryable: [33mtrue[39m,
  attempt: [33m0[39m,
  maxRetries: [33m3[39m
}
[2025-10-11T23:52:15.034Z] [DEBUG] 🔄 Will retry after 500ms 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mretry logic[2m > [22m[2mshould retry on 5xx errors
[22m[39m[2025-10-11T23:52:15.549Z] [DEBUG] 🔄 Attempt 2/4 for http://localhost:8000/api/jobs?skip=0&limit=100 
[2025-10-11T23:52:15.549Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/jobs?skip=0&limit=100'[39m,
  method: [32m'GET'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mfalse[39m,
  bodyType: [32m'none'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mretry logic[2m > [22m[2mshould retry on 5xx errors
[22m[39m[2025-10-11T23:52:15.549Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/jobs?skip=0&limit=100'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:15.549Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mretry logic[2m > [22m[2mshould retry on 5xx errors
[22m[39m[2025-10-11T23:52:15.550Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/jobs?skip=0&limit=100 { jobs: [], total: [33m0[39m, page: [33m1[39m, pages: [33m0[39m }

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mretry logic[2m > [22m[2mshould not retry on 4xx errors
[22m[39m[2025-10-11T23:52:15.551Z] [DEBUG] 🌐 API Request starting: GET http://localhost:8000/api/jobs?skip=0&limit=100 
[2025-10-11T23:52:15.551Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.551Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.551Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/jobs?skip=0&limit=100 
[2025-10-11T23:52:15.551Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/jobs?skip=0&limit=100'[39m,
  method: [32m'GET'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mfalse[39m,
  bodyType: [32m'none'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mretry logic[2m > [22m[2mshould not retry on 4xx errors
[22m[39m[2025-10-11T23:52:15.552Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/jobs?skip=0&limit=100'[39m,
  status: [33m400[39m,
  statusText: [32m'Bad Request'[39m,
  ok: [33mfalse[39m,
  headers: {}
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mretry logic[2m > [22m[2mshould not retry on 4xx errors
[22m[39m[2025-10-11T23:52:15.552Z] [DEBUG] ❌ Error response data: {}
[2025-10-11T23:52:15.552Z] [DEBUG] ❌ API Error created: {
  message: [32m'HTTP 400: Bad Request'[39m,
  status: [33m400[39m,
  isRetryable: [33mfalse[39m,
  attempt: [33m0[39m,
  maxRetries: [33m3[39m
}
[2025-10-11T23:52:15.552Z] [DEBUG] ❌ Throwing error - no more retries or not retryable 
[2025-10-11T23:52:15.552Z] [DEBUG] ❌ Fetch error caught: {
  name: [32m'ApiError'[39m,
  message: [32m'HTTP 400: Bad Request'[39m,
  stack: [32m'ApiError: HTTP 400: Bad Request\n'[39m +
    [32m'    at JDDBApiClient.request (C:\\JDDB\\src\\lib\\api.ts:324:25)\n'[39m +
    [32m'    at C:\\JDDB\\src\\lib\\api.test.ts:557:7'[39m
}
[2025-10-11T23:52:15.552Z] [DEBUG] 🔄 Error is retryable: 
[2025-10-11T23:52:15.552Z] [DEBUG] ❌ Throwing final error - no more retries or not retryable 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mrequest headers[2m > [22m[2mshould include correct headers in requests
[22m[39m[2025-10-11T23:52:15.554Z] [DEBUG] 🌐 API Request starting: GET http://localhost:8000/api/jobs?skip=0&limit=100 
[2025-10-11T23:52:15.554Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.554Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.554Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/jobs?skip=0&limit=100 
[2025-10-11T23:52:15.554Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/jobs?skip=0&limit=100'[39m,
  method: [32m'GET'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mfalse[39m,
  bodyType: [32m'none'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mrequest headers[2m > [22m[2mshould include correct headers in requests
[22m[39m[2025-10-11T23:52:15.554Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/jobs?skip=0&limit=100'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:15.554Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mrequest headers[2m > [22m[2mshould include correct headers in requests
[22m[39m[2025-10-11T23:52:15.554Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/jobs?skip=0&limit=100 { jobs: [], total: [33m0[39m, page: [33m1[39m, pages: [33m0[39m }

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mrequest headers[2m > [22m[2mshould not include Content-Type for FormData requests
[22m[39m[2025-10-11T23:52:15.556Z] [DEBUG] 🌐 API Request starting: POST http://localhost:8000/api/ingestion/upload 
[2025-10-11T23:52:15.556Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.556Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.556Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/ingestion/upload 
[2025-10-11T23:52:15.556Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/ingestion/upload'[39m,
  method: [32m'POST'[39m,
  headers: { Accept: [32m'application/json'[39m },
  hasBody: [33mtrue[39m,
  bodyType: [32m'FormData'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mrequest headers[2m > [22m[2mshould not include Content-Type for FormData requests
[22m[39m[2025-10-11T23:52:15.556Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/ingestion/upload'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:15.557Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mrequest headers[2m > [22m[2mshould not include Content-Type for FormData requests
[22m[39m[2025-10-11T23:52:15.557Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/ingestion/upload { message: [32m'Success'[39m }

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mhealth endpoints[2m > [22m[2mhealthCheck returns health status
[22m[39m[2025-10-11T23:52:15.561Z] [DEBUG] 🌐 API Request starting: GET http://localhost:8000/api/health 
[2025-10-11T23:52:15.561Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.561Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.561Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/health 
[2025-10-11T23:52:15.561Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/health'[39m,
  method: [32m'GET'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mfalse[39m,
  bodyType: [32m'none'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mhealth endpoints[2m > [22m[2mhealthCheck returns health status
[22m[39m[2025-10-11T23:52:15.562Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/health'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:15.562Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mhealth endpoints[2m > [22m[2mhealthCheck returns health status
[22m[39m[2025-10-11T23:52:15.562Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/health { status: [32m'healthy'[39m, timestamp: [32m'2025-10-11T23:52:15.562Z'[39m }

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mhealth endpoints[2m > [22m[2mgetDetailedHealth returns detailed health data
[22m[39m[2025-10-11T23:52:15.563Z] [DEBUG] 🌐 API Request starting: GET http://localhost:8000/api/health/detailed 
[2025-10-11T23:52:15.563Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.563Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.563Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/health/detailed 
[2025-10-11T23:52:15.563Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/health/detailed'[39m,
  method: [32m'GET'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mfalse[39m,
  bodyType: [32m'none'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mhealth endpoints[2m > [22m[2mgetDetailedHealth returns detailed health data
[22m[39m[2025-10-11T23:52:15.564Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/health/detailed'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:15.564Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mhealth endpoints[2m > [22m[2mgetDetailedHealth returns detailed health data
[22m[39m[2025-10-11T23:52:15.564Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/health/detailed { database: [32m'connected'[39m, redis: [32m'connected'[39m }

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mjob management methods[2m > [22m[2mgetJobSection retrieves specific job section
[22m[39m[2025-10-11T23:52:15.565Z] [DEBUG] 🌐 API Request starting: GET http://localhost:8000/api/jobs/1/sections/10 
[2025-10-11T23:52:15.566Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.566Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.566Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/jobs/1/sections/10 
[2025-10-11T23:52:15.566Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/jobs/1/sections/10'[39m,
  method: [32m'GET'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mfalse[39m,
  bodyType: [32m'none'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mjob management methods[2m > [22m[2mgetJobSection retrieves specific job section
[22m[39m[2025-10-11T23:52:15.566Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/jobs/1/sections/10'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:15.566Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mjob management methods[2m > [22m[2mgetJobSection retrieves specific job section
[22m[39m[2025-10-11T23:52:15.566Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/jobs/1/sections/10 { section_type: [32m'accountability'[39m, section_content: [32m'Test content'[39m }

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mjob management methods[2m > [22m[2mdeleteJob removes a job
[22m[39m[2025-10-11T23:52:15.567Z] [DEBUG] 🌐 API Request starting: DELETE http://localhost:8000/api/jobs/1 
[2025-10-11T23:52:15.567Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.568Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.568Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/jobs/1 
[2025-10-11T23:52:15.568Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/jobs/1'[39m,
  method: [32m'DELETE'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mfalse[39m,
  bodyType: [32m'none'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mjob management methods[2m > [22m[2mdeleteJob removes a job
[22m[39m[2025-10-11T23:52:15.568Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/jobs/1'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:15.568Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mjob management methods[2m > [22m[2mdeleteJob removes a job
[22m[39m[2025-10-11T23:52:15.568Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/jobs/1 { message: [32m'Job deleted successfully'[39m }

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mjob management methods[2m > [22m[2mreprocessJob triggers job reprocessing
[22m[39m[2025-10-11T23:52:15.569Z] [DEBUG] 🌐 API Request starting: POST http://localhost:8000/api/jobs/1/reprocess 
[2025-10-11T23:52:15.570Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.570Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.570Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/jobs/1/reprocess 
[2025-10-11T23:52:15.570Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/jobs/1/reprocess'[39m,
  method: [32m'POST'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mfalse[39m,
  bodyType: [32m'none'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mjob management methods[2m > [22m[2mreprocessJob triggers job reprocessing
[22m[39m[2025-10-11T23:52:15.570Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/jobs/1/reprocess'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:15.570Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mjob management methods[2m > [22m[2mreprocessJob triggers job reprocessing
[22m[39m[2025-10-11T23:52:15.570Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/jobs/1/reprocess { message: [32m'Job reprocessing started'[39m, job_id: [33m1[39m }

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mskills endpoints[2m > [22m[2mgetSkillsInventory retrieves skills data
[22m[39m[2025-10-11T23:52:15.571Z] [DEBUG] 🌐 API Request starting: GET http://localhost:8000/api/analytics/skills/inventory?limit=10 
[2025-10-11T23:52:15.572Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.572Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.572Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/analytics/skills/inventory?limit=10 
[2025-10-11T23:52:15.572Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/analytics/skills/inventory?limit=10'[39m,
  method: [32m'GET'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mfalse[39m,
  bodyType: [32m'none'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mskills endpoints[2m > [22m[2mgetSkillsInventory retrieves skills data
[22m[39m[2025-10-11T23:52:15.572Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/analytics/skills/inventory?limit=10'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:15.572Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mskills endpoints[2m > [22m[2mgetSkillsInventory retrieves skills data
[22m[39m[2025-10-11T23:52:15.572Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/analytics/skills/inventory?limit=10 { skills: [], total: [33m0[39m }

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mskills endpoints[2m > [22m[2mgetTopSkills retrieves top skills
[22m[39m[2025-10-11T23:52:15.573Z] [DEBUG] 🌐 API Request starting: GET http://localhost:8000/api/analytics/skills/top?limit=10 
[2025-10-11T23:52:15.573Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.573Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.573Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/analytics/skills/top?limit=10 
[2025-10-11T23:52:15.574Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/analytics/skills/top?limit=10'[39m,
  method: [32m'GET'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mfalse[39m,
  bodyType: [32m'none'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mskills endpoints[2m > [22m[2mgetTopSkills retrieves top skills
[22m[39m[2025-10-11T23:52:15.574Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/analytics/skills/top?limit=10'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:15.574Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mskills endpoints[2m > [22m[2mgetTopSkills retrieves top skills
[22m[39m[2025-10-11T23:52:15.574Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/analytics/skills/top?limit=10 { skills: [], limit: [33m10[39m }

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mskills endpoints[2m > [22m[2mgetSkillTypes retrieves skill types
[22m[39m[2025-10-11T23:52:15.575Z] [DEBUG] 🌐 API Request starting: GET http://localhost:8000/api/analytics/skills/types 
[2025-10-11T23:52:15.575Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.575Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.575Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/analytics/skills/types 
[2025-10-11T23:52:15.575Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/analytics/skills/types'[39m,
  method: [32m'GET'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mfalse[39m,
  bodyType: [32m'none'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mskills endpoints[2m > [22m[2mgetSkillTypes retrieves skill types
[22m[39m[2025-10-11T23:52:15.576Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/analytics/skills/types'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:15.576Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mskills endpoints[2m > [22m[2mgetSkillTypes retrieves skill types
[22m[39m[2025-10-11T23:52:15.576Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/analytics/skills/types { types: [] }

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mskills endpoints[2m > [22m[2mgetSkillsStats retrieves skills statistics
[22m[39m[2025-10-11T23:52:15.577Z] [DEBUG] 🌐 API Request starting: GET http://localhost:8000/api/analytics/skills/stats 
[2025-10-11T23:52:15.577Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.577Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.577Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/analytics/skills/stats 
[2025-10-11T23:52:15.577Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/analytics/skills/stats'[39m,
  method: [32m'GET'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mfalse[39m,
  bodyType: [32m'none'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mskills endpoints[2m > [22m[2mgetSkillsStats retrieves skills statistics
[22m[39m[2025-10-11T23:52:15.578Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/analytics/skills/stats'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:15.578Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mskills endpoints[2m > [22m[2mgetSkillsStats retrieves skills statistics
[22m[39m[2025-10-11T23:52:15.578Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/analytics/skills/stats { total_skills: [33m0[39m, total_jobs_with_skills: [33m0[39m }

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mpreferences endpoints[2m > [22m[2mgetAllPreferences retrieves all preferences
[22m[39m[2025-10-11T23:52:15.579Z] [DEBUG] 🌐 API Request starting: GET http://localhost:8000/api/preferences 
[2025-10-11T23:52:15.579Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.579Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.580Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/preferences 
[2025-10-11T23:52:15.580Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/preferences'[39m,
  method: [32m'GET'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mfalse[39m,
  bodyType: [32m'none'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mpreferences endpoints[2m > [22m[2mgetAllPreferences retrieves all preferences
[22m[39m[2025-10-11T23:52:15.580Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/preferences'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:15.580Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mpreferences endpoints[2m > [22m[2mgetAllPreferences retrieves all preferences
[22m[39m[2025-10-11T23:52:15.580Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/preferences { preferences: { theme: [32m'dark'[39m }, session_id: [32m'123'[39m }

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mpreferences endpoints[2m > [22m[2mupdatePreference updates a single preference
[22m[39m[2025-10-11T23:52:15.581Z] [DEBUG] 🌐 API Request starting: PUT http://localhost:8000/api/preferences/theme 
[2025-10-11T23:52:15.581Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.582Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.582Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/preferences/theme 
[2025-10-11T23:52:15.582Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/preferences/theme'[39m,
  method: [32m'PUT'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mtrue[39m,
  bodyType: [32m'String'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mpreferences endpoints[2m > [22m[2mupdatePreference updates a single preference
[22m[39m[2025-10-11T23:52:15.583Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/preferences/theme'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:15.583Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mpreferences endpoints[2m > [22m[2mupdatePreference updates a single preference
[22m[39m[2025-10-11T23:52:15.584Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/preferences/theme { message: [32m'Updated'[39m, key: [32m'theme'[39m, value: [32m'dark'[39m }

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mpreferences endpoints[2m > [22m[2mgetPreference retrieves a single preference
[22m[39m[2025-10-11T23:52:15.585Z] [DEBUG] 🌐 API Request starting: GET http://localhost:8000/api/preferences/theme 
[2025-10-11T23:52:15.585Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.585Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.585Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/preferences/theme 
[2025-10-11T23:52:15.585Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/preferences/theme'[39m,
  method: [32m'GET'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mfalse[39m,
  bodyType: [32m'none'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mpreferences endpoints[2m > [22m[2mgetPreference retrieves a single preference
[22m[39m[2025-10-11T23:52:15.585Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/preferences/theme'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:15.585Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mpreferences endpoints[2m > [22m[2mgetPreference retrieves a single preference
[22m[39m[2025-10-11T23:52:15.585Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/preferences/theme { key: [32m'theme'[39m, value: [32m'dark'[39m }

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mpreferences endpoints[2m > [22m[2mdeletePreference removes a preference
[22m[39m[2025-10-11T23:52:15.587Z] [DEBUG] 🌐 API Request starting: DELETE http://localhost:8000/api/preferences/theme 
[2025-10-11T23:52:15.587Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.587Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.587Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/preferences/theme 
[2025-10-11T23:52:15.587Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/preferences/theme'[39m,
  method: [32m'DELETE'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mfalse[39m,
  bodyType: [32m'none'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mpreferences endpoints[2m > [22m[2mdeletePreference removes a preference
[22m[39m[2025-10-11T23:52:15.587Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/preferences/theme'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:15.587Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mpreferences endpoints[2m > [22m[2mdeletePreference removes a preference
[22m[39m[2025-10-11T23:52:15.587Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/preferences/theme { message: [32m'Deleted'[39m }

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mAI and bias detection endpoints[2m > [22m[2manalyzeBias analyzes job for bias
[22m[39m[2025-10-11T23:52:15.588Z] [DEBUG] 🌐 API Request starting: POST http://localhost:8000/api/ai/bias 
[2025-10-11T23:52:15.588Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.588Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.588Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/ai/bias 
[2025-10-11T23:52:15.589Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/ai/bias'[39m,
  method: [32m'POST'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mtrue[39m,
  bodyType: [32m'String'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mAI and bias detection endpoints[2m > [22m[2manalyzeBias analyzes job for bias
[22m[39m[2025-10-11T23:52:15.589Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/ai/bias'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:15.589Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mAI and bias detection endpoints[2m > [22m[2manalyzeBias analyzes job for bias
[22m[39m[2025-10-11T23:52:15.589Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/ai/bias { bias_score: [33m0.2[39m, issues: [] }

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mAI and bias detection endpoints[2m > [22m[2mcalculateQualityScore calculates quality metrics
[22m[39m[2025-10-11T23:52:15.590Z] [DEBUG] 🌐 API Request starting: POST http://localhost:8000/api/ai/quality-score 
[2025-10-11T23:52:15.590Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.590Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.590Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/ai/quality-score 
[2025-10-11T23:52:15.591Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/ai/quality-score'[39m,
  method: [32m'POST'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mtrue[39m,
  bodyType: [32m'String'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mAI and bias detection endpoints[2m > [22m[2mcalculateQualityScore calculates quality metrics
[22m[39m[2025-10-11T23:52:15.591Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/ai/quality-score'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:15.591Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mAI and bias detection endpoints[2m > [22m[2mcalculateQualityScore calculates quality metrics
[22m[39m[2025-10-11T23:52:15.591Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/ai/quality-score { quality_score: [33m85[39m, metrics: {} }

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mAI and bias detection endpoints[2m > [22m[2mgetSuggestions retrieves AI suggestions
[22m[39m[2025-10-11T23:52:15.592Z] [DEBUG] 🌐 API Request starting: POST http://localhost:8000/api/ai/suggestions 
[2025-10-11T23:52:15.593Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.593Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.593Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/ai/suggestions 
[2025-10-11T23:52:15.593Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/ai/suggestions'[39m,
  method: [32m'POST'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mtrue[39m,
  bodyType: [32m'String'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mAI and bias detection endpoints[2m > [22m[2mgetSuggestions retrieves AI suggestions
[22m[39m[2025-10-11T23:52:15.593Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/ai/suggestions'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:15.593Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mAI and bias detection endpoints[2m > [22m[2mgetSuggestions retrieves AI suggestions
[22m[39m[2025-10-11T23:52:15.593Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/ai/suggestions { suggestions: [] }

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mtemplate endpoints[2m > [22m[2mgetTemplate retrieves a template
[22m[39m[2025-10-11T23:52:15.594Z] [DEBUG] 🌐 API Request starting: GET http://localhost:8000/api/ai/templates/EX-01?language=en 
[2025-10-11T23:52:15.594Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.595Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.595Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/ai/templates/EX-01?language=en 
[2025-10-11T23:52:15.595Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/ai/templates/EX-01?language=en'[39m,
  method: [32m'GET'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mfalse[39m,
  bodyType: [32m'none'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mtemplate endpoints[2m > [22m[2mgetTemplate retrieves a template
[22m[39m[2025-10-11T23:52:15.595Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/ai/templates/EX-01?language=en'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:15.595Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mtemplate endpoints[2m > [22m[2mgetTemplate retrieves a template
[22m[39m[2025-10-11T23:52:15.595Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/ai/templates/EX-01?language=en { template: [32m'Test template'[39m, classification: [32m'EX-01'[39m }

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mtemplate endpoints[2m > [22m[2mgenerateTemplate generates a new template
[22m[39m[2025-10-11T23:52:15.598Z] [DEBUG] 🌐 API Request starting: POST http://localhost:8000/api/ai/templates/generate 
[2025-10-11T23:52:15.598Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.598Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.598Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/ai/templates/generate 
[2025-10-11T23:52:15.598Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/ai/templates/generate'[39m,
  method: [32m'POST'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mtrue[39m,
  bodyType: [32m'String'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mtemplate endpoints[2m > [22m[2mgenerateTemplate generates a new template
[22m[39m[2025-10-11T23:52:15.598Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/ai/templates/generate'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:15.598Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mtemplate endpoints[2m > [22m[2mgenerateTemplate generates a new template
[22m[39m[2025-10-11T23:52:15.599Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/ai/templates/generate { template: [32m'Generated template'[39m, classification: [32m'EX-01'[39m }

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2msearch utility endpoints[2m > [22m[2mgetSearchFacets retrieves search facets
[22m[39m[2025-10-11T23:52:15.601Z] [DEBUG] 🌐 API Request starting: GET http://localhost:8000/api/search/facets 
[2025-10-11T23:52:15.601Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.601Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.601Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/search/facets 
[2025-10-11T23:52:15.601Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/search/facets'[39m,
  method: [32m'GET'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mfalse[39m,
  bodyType: [32m'none'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2msearch utility endpoints[2m > [22m[2mgetSearchFacets retrieves search facets
[22m[39m[2025-10-11T23:52:15.601Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/search/facets'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:15.601Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2msearch utility endpoints[2m > [22m[2mgetSearchFacets retrieves search facets
[22m[39m[2025-10-11T23:52:15.602Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/search/facets { facets: { classifications: [], languages: [] } }

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2msearch utility endpoints[2m > [22m[2mgetSearchSuggestions retrieves search suggestions
[22m[39m[2025-10-11T23:52:15.604Z] [DEBUG] 🌐 API Request starting: GET http://localhost:8000/api/search/suggestions?q=%5Bobject+Object%5D&limit=10 
[2025-10-11T23:52:15.604Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.604Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.604Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/search/suggestions?q=%5Bobject+Object%5D&limit=10 
[2025-10-11T23:52:15.605Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/search/suggestions?q=%5Bobject+Object%5D&limit=10'[39m,
  method: [32m'GET'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mfalse[39m,
  bodyType: [32m'none'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2msearch utility endpoints[2m > [22m[2mgetSearchSuggestions retrieves search suggestions
[22m[39m[2025-10-11T23:52:15.605Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/search/suggestions?q=%5Bobject+Object%5D&limit=10'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:15.605Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2msearch utility endpoints[2m > [22m[2mgetSearchSuggestions retrieves search suggestions
[22m[39m[2025-10-11T23:52:15.605Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/search/suggestions?q=%5Bobject+Object%5D&limit=10 { suggestions: [ [32m'test'[39m, [32m'testing'[39m ] }

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2msearch utility endpoints[2m > [22m[2mfindSimilarJobs finds similar jobs
[22m[39m[2025-10-11T23:52:15.607Z] [DEBUG] 🌐 API Request starting: GET http://localhost:8000/api/search/similar/[object Object]?limit=10 
[2025-10-11T23:52:15.607Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.607Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.607Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/search/similar/[object Object]?limit=10 
[2025-10-11T23:52:15.607Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/search/similar/[object Object]?limit=10'[39m,
  method: [32m'GET'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mfalse[39m,
  bodyType: [32m'none'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2msearch utility endpoints[2m > [22m[2mfindSimilarJobs finds similar jobs
[22m[39m[2025-10-11T23:52:15.607Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/search/similar/[object Object]?limit=10'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:15.607Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2msearch utility endpoints[2m > [22m[2mfindSimilarJobs finds similar jobs
[22m[39m[2025-10-11T23:52:15.608Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/search/similar/[object Object]?limit=10 { similar_jobs: [], count: [33m0[39m }

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mjob creation and ingestion[2m > [22m[2mcreateJob creates a new job
[22m[39m[2025-10-11T23:52:15.609Z] [DEBUG] 🌐 API Request starting: POST http://localhost:8000/api/jobs/ 
[2025-10-11T23:52:15.609Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.609Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.609Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/jobs/ 
[2025-10-11T23:52:15.609Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/jobs/'[39m,
  method: [32m'POST'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mtrue[39m,
  bodyType: [32m'String'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mjob creation and ingestion[2m > [22m[2mcreateJob creates a new job
[22m[39m[2025-10-11T23:52:15.610Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/jobs/'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:15.610Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mjob creation and ingestion[2m > [22m[2mcreateJob creates a new job
[22m[39m[2025-10-11T23:52:15.610Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/jobs/ {
  status: [32m'success'[39m,
  message: [32m'Job created'[39m,
  job_id: [33m1[39m,
  job: { id: [33m1[39m, job_number: [32m'12345'[39m, title: [32m'Test Job'[39m }
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mjob creation and ingestion[2m > [22m[2mscanDirectory scans a directory for files
[22m[39m[2025-10-11T23:52:15.614Z] [DEBUG] 🌐 API Request starting: POST http://localhost:8000/api/ingestion/scan-directory 
[2025-10-11T23:52:15.614Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.614Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.614Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/ingestion/scan-directory 
[2025-10-11T23:52:15.614Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/ingestion/scan-directory'[39m,
  method: [32m'POST'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mtrue[39m,
  bodyType: [32m'String'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mjob creation and ingestion[2m > [22m[2mscanDirectory scans a directory for files
[22m[39m[2025-10-11T23:52:15.615Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/ingestion/scan-directory'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:15.615Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mjob creation and ingestion[2m > [22m[2mscanDirectory scans a directory for files
[22m[39m[2025-10-11T23:52:15.615Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/ingestion/scan-directory { files: [], count: [33m0[39m }

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mjob creation and ingestion[2m > [22m[2mprocessFile processes a single file
[22m[39m[2025-10-11T23:52:15.616Z] [DEBUG] 🌐 API Request starting: POST http://localhost:8000/api/ingestion/process-file 
[2025-10-11T23:52:15.616Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.617Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.617Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/ingestion/process-file 
[2025-10-11T23:52:15.617Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/ingestion/process-file'[39m,
  method: [32m'POST'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mtrue[39m,
  bodyType: [32m'String'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mjob creation and ingestion[2m > [22m[2mprocessFile processes a single file
[22m[39m[2025-10-11T23:52:15.617Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/ingestion/process-file'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:15.617Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mjob creation and ingestion[2m > [22m[2mprocessFile processes a single file
[22m[39m[2025-10-11T23:52:15.617Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/ingestion/process-file { status: [32m'processed'[39m, job_id: [33m1[39m }

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mjob creation and ingestion[2m > [22m[2mbatchIngest processes multiple files
[22m[39m[2025-10-11T23:52:15.619Z] [DEBUG] 🌐 API Request starting: POST http://localhost:8000/api/ingestion/batch-ingest 
[2025-10-11T23:52:15.620Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.620Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.620Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/ingestion/batch-ingest 
[2025-10-11T23:52:15.620Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/ingestion/batch-ingest'[39m,
  method: [32m'POST'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mtrue[39m,
  bodyType: [32m'String'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mjob creation and ingestion[2m > [22m[2mbatchIngest processes multiple files
[22m[39m[2025-10-11T23:52:15.620Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/ingestion/batch-ingest'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:15.621Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2mjob creation and ingestion[2m > [22m[2mbatchIngest processes multiple files
[22m[39m[2025-10-11T23:52:15.621Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/ingestion/batch-ingest { processed: [33m5[39m, failed: [33m0[39m, total: [33m5[39m }

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2madditional health endpoints[2m > [22m[2mgetSystemAlerts retrieves system alerts
[22m[39m[2025-10-11T23:52:15.623Z] [DEBUG] 🌐 API Request starting: GET http://localhost:8000/api/health/alerts 
[2025-10-11T23:52:15.623Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.623Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.623Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/health/alerts 
[2025-10-11T23:52:15.623Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/health/alerts'[39m,
  method: [32m'GET'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mfalse[39m,
  bodyType: [32m'none'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2madditional health endpoints[2m > [22m[2mgetSystemAlerts retrieves system alerts
[22m[39m[2025-10-11T23:52:15.624Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/health/alerts'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:15.624Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2madditional health endpoints[2m > [22m[2mgetSystemAlerts retrieves system alerts
[22m[39m[2025-10-11T23:52:15.624Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/health/alerts [ { level: [32m'warning'[39m, message: [32m'High CPU'[39m } ]

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2madditional health endpoints[2m > [22m[2mgetComponentHealth retrieves component health
[22m[39m[2025-10-11T23:52:15.625Z] [DEBUG] 🌐 API Request starting: GET http://localhost:8000/api/health/components/database 
[2025-10-11T23:52:15.625Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.625Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.625Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/health/components/database 
[2025-10-11T23:52:15.625Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/health/components/database'[39m,
  method: [32m'GET'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mfalse[39m,
  bodyType: [32m'none'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2madditional health endpoints[2m > [22m[2mgetComponentHealth retrieves component health
[22m[39m[2025-10-11T23:52:15.626Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/health/components/database'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:15.626Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2madditional health endpoints[2m > [22m[2mgetComponentHealth retrieves component health
[22m[39m[2025-10-11T23:52:15.626Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/health/components/database { status: [32m'healthy'[39m, component: [32m'database'[39m }

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2madditional health endpoints[2m > [22m[2mgetSystemMetrics retrieves system metrics
[22m[39m[2025-10-11T23:52:15.628Z] [DEBUG] 🌐 API Request starting: GET http://localhost:8000/api/health/metrics/system 
[2025-10-11T23:52:15.628Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.628Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.628Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/health/metrics/system 
[2025-10-11T23:52:15.628Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/health/metrics/system'[39m,
  method: [32m'GET'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mfalse[39m,
  bodyType: [32m'none'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2madditional health endpoints[2m > [22m[2mgetSystemMetrics retrieves system metrics
[22m[39m[2025-10-11T23:52:15.628Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/health/metrics/system'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:15.629Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2madditional health endpoints[2m > [22m[2mgetSystemMetrics retrieves system metrics
[22m[39m[2025-10-11T23:52:15.629Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/health/metrics/system { cpu: [33m45[39m, memory: [33m2048[39m, disk: [33m50000[39m }

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2madditional health endpoints[2m > [22m[2mgetApplicationMetrics retrieves application metrics
[22m[39m[2025-10-11T23:52:15.630Z] [DEBUG] 🌐 API Request starting: GET http://localhost:8000/api/health/metrics/application 
[2025-10-11T23:52:15.630Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.630Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.630Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/health/metrics/application 
[2025-10-11T23:52:15.630Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/health/metrics/application'[39m,
  method: [32m'GET'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mfalse[39m,
  bodyType: [32m'none'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2madditional health endpoints[2m > [22m[2mgetApplicationMetrics retrieves application metrics
[22m[39m[2025-10-11T23:52:15.630Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/health/metrics/application'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:15.630Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2madditional health endpoints[2m > [22m[2mgetApplicationMetrics retrieves application metrics
[22m[39m[2025-10-11T23:52:15.631Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/health/metrics/application { requests: [33m1000[39m, errors: [33m5[39m, response_time: [33m250[39m }

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2madditional preferences endpoints[2m > [22m[2mupdatePreferencesBulk updates multiple preferences
[22m[39m[2025-10-11T23:52:15.632Z] [DEBUG] 🌐 API Request starting: POST http://localhost:8000/api/preferences/bulk 
[2025-10-11T23:52:15.632Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.632Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.632Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/preferences/bulk 
[2025-10-11T23:52:15.632Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/preferences/bulk'[39m,
  method: [32m'POST'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mtrue[39m,
  bodyType: [32m'String'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2madditional preferences endpoints[2m > [22m[2mupdatePreferencesBulk updates multiple preferences
[22m[39m[2025-10-11T23:52:15.632Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/preferences/bulk'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:15.633Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2madditional preferences endpoints[2m > [22m[2mupdatePreferencesBulk updates multiple preferences
[22m[39m[2025-10-11T23:52:15.633Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/preferences/bulk { message: [32m'Updated'[39m, updated: [33m3[39m, created: [33m1[39m, total: [33m4[39m }

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2madditional preferences endpoints[2m > [22m[2mresetAllPreferences resets all preferences
[22m[39m[2025-10-11T23:52:15.634Z] [DEBUG] 🌐 API Request starting: DELETE http://localhost:8000/api/preferences 
[2025-10-11T23:52:15.634Z] [DEBUG] 📋 Request options: { timeout: [33m120000[39m, retries: [33m3[39m, retryDelay: [33m500[39m }
[2025-10-11T23:52:15.634Z] [DEBUG] 🔑 API Key present: 
[2025-10-11T23:52:15.634Z] [DEBUG] 🔄 Attempt 1/4 for http://localhost:8000/api/preferences 
[2025-10-11T23:52:15.634Z] [DEBUG] 📤 About to call fetch() with: {
  url: [32m'http://localhost:8000/api/preferences'[39m,
  method: [32m'DELETE'[39m,
  headers: { Accept: [32m'application/json'[39m, [32m'Content-Type'[39m: [32m'application/json'[39m },
  hasBody: [33mfalse[39m,
  bodyType: [32m'none'[39m
}

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2madditional preferences endpoints[2m > [22m[2mresetAllPreferences resets all preferences
[22m[39m[2025-10-11T23:52:15.634Z] [DEBUG] 📥 Fetch response received: {
  url: [32m'http://localhost:8000/api/preferences'[39m,
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  ok: [33mtrue[39m,
  headers: {}
}
[2025-10-11T23:52:15.634Z] [DEBUG] ✅ Successful response, parsing JSON... 

[90mstdout[2m | src/lib/api.test.ts[2m > [22m[2mJDDBApiClient[2m > [22m[2madditional preferences endpoints[2m > [22m[2mresetAllPreferences resets all preferences
[22m[39m[2025-10-11T23:52:15.635Z] [DEBUG] ✅ API Request completed successfully for http://localhost:8000/api/preferences { message: [32m'Reset'[39m, deleted: [33m5[39m }

 [31m❯[39m src/lib/api.test.ts [2m([22m[2m62 tests[22m[2m | [22m[31m1 failed[39m[2m)[22m[33m 1232[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mconstructor[2m > [22mshould use environment API URL when available[32m 5[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mconstructor[2m > [22mshould use fallback URL when environment not available[32m 2[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mtestConnection[2m > [22mshould return true when API is reachable[32m 8[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mtestConnection[2m > [22mshould return false when API is unreachable[32m 16[2mms[22m[39m
[31m   [31m×[31m JDDBApiClient[2m > [22mtestConnection[2m > [22mshould return false when API returns error status[39m[33m 521[2mms[22m[39m
[31m     → expected true to be false // Object.is equality[39m
   [32m✓[39m JDDBApiClient[2m > [22mgetJobs[2m > [22mshould fetch jobs successfully[32m 6[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mgetJobs[2m > [22mshould handle pagination parameters[32m 3[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mgetJobs[2m > [22mshould handle search parameters[32m 5[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mgetJobs[2m > [22mshould throw error when API request fails[32m 10[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mgetJobById[2m > [22mshould fetch job by ID successfully[32m 8[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mgetJobById[2m > [22mshould handle not found error[32m 9[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22muploadFile[2m > [22mshould upload file successfully[32m 8[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22muploadFile[2m > [22mshould handle upload failure[32m 3[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22msearchJobs[2m > [22mshould search jobs successfully[32m 3[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22msearchJobs[2m > [22mshould handle advanced search parameters[32m 2[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mcompareJobs[2m > [22mshould compare jobs successfully[32m 3[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mgetJobStatistics[2m > [22mshould fetch statistics successfully[32m 3[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22merror handling[2m > [22mshould handle network errors[32m 4[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22merror handling[2m > [22mshould handle timeout errors[32m 3[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22merror handling[2m > [22mshould handle JSON parsing errors[32m 3[2mms[22m[39m
   [33m[2m✓[22m[39m JDDBApiClient[2m > [22mretry logic[2m > [22mshould retry on 5xx errors [33m 519[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mretry logic[2m > [22mshould not retry on 4xx errors[32m 2[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mrequest headers[2m > [22mshould include correct headers in requests[32m 2[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mrequest headers[2m > [22mshould not include Content-Type for FormData requests[32m 2[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mconfiguration methods[2m > [22msetApiKey updates the API key[32m 0[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mconfiguration methods[2m > [22msetDefaultTimeout updates timeout value[32m 0[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mconfiguration methods[2m > [22msetDefaultRetries updates retries value[32m 0[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mconfiguration methods[2m > [22msetRetryDelay updates retry delay[32m 0[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mconfiguration methods[2m > [22mgetInstance returns singleton instance[32m 0[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22menvironment info[2m > [22mgetEnvironmentInfo returns correct structure[32m 1[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22menvironment info[2m > [22mdetects production environment[32m 1[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mhealth endpoints[2m > [22mhealthCheck returns health status[32m 2[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mhealth endpoints[2m > [22mgetDetailedHealth returns detailed health data[32m 2[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mjob management methods[2m > [22mgetJobSection retrieves specific job section[32m 2[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mjob management methods[2m > [22mdeleteJob removes a job[32m 2[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mjob management methods[2m > [22mreprocessJob triggers job reprocessing[32m 2[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mskills endpoints[2m > [22mgetSkillsInventory retrieves skills data[32m 2[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mskills endpoints[2m > [22mgetTopSkills retrieves top skills[32m 2[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mskills endpoints[2m > [22mgetSkillTypes retrieves skill types[32m 2[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mskills endpoints[2m > [22mgetSkillsStats retrieves skills statistics[32m 2[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mpreferences endpoints[2m > [22mgetAllPreferences retrieves all preferences[32m 2[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mpreferences endpoints[2m > [22mupdatePreference updates a single preference[32m 3[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mpreferences endpoints[2m > [22mgetPreference retrieves a single preference[32m 2[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mpreferences endpoints[2m > [22mdeletePreference removes a preference[32m 2[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mAI and bias detection endpoints[2m > [22manalyzeBias analyzes job for bias[32m 2[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mAI and bias detection endpoints[2m > [22mcalculateQualityScore calculates quality metrics[32m 2[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mAI and bias detection endpoints[2m > [22mgetSuggestions retrieves AI suggestions[32m 2[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mtemplate endpoints[2m > [22mgetTemplate retrieves a template[32m 3[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mtemplate endpoints[2m > [22mgenerateTemplate generates a new template[32m 3[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22msearch utility endpoints[2m > [22mgetSearchFacets retrieves search facets[32m 3[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22msearch utility endpoints[2m > [22mgetSearchSuggestions retrieves search suggestions[32m 3[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22msearch utility endpoints[2m > [22mfindSimilarJobs finds similar jobs[32m 2[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mjob creation and ingestion[2m > [22mcreateJob creates a new job[32m 2[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mjob creation and ingestion[2m > [22mscanDirectory scans a directory for files[32m 5[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mjob creation and ingestion[2m > [22mprocessFile processes a single file[32m 3[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22mjob creation and ingestion[2m > [22mbatchIngest processes multiple files[32m 4[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22madditional health endpoints[2m > [22mgetSystemAlerts retrieves system alerts[32m 2[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22madditional health endpoints[2m > [22mgetComponentHealth retrieves component health[32m 3[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22madditional health endpoints[2m > [22mgetSystemMetrics retrieves system metrics[32m 2[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22madditional health endpoints[2m > [22mgetApplicationMetrics retrieves application metrics[32m 2[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22madditional preferences endpoints[2m > [22mupdatePreferencesBulk updates multiple preferences[32m 2[2mms[22m[39m
   [32m✓[39m JDDBApiClient[2m > [22madditional preferences endpoints[2m > [22mresetAllPreferences resets all preferences[32m 2[2mms[22m[39m
 [31m❯[39m src/components/ui/error-boundary.test.tsx [2m([22m[2m7 tests[22m[2m | [22m[31m2 failed[39m[2m)[22m[33m 1322[2mms[22m[39m
   [32m✓[39m ErrorBoundary[2m > [22mrenders children when there is no error[32m 53[2mms[22m[39m
   [32m✓[39m ErrorBoundary[2m > [22mcatches an error and renders the default error UI[32m 90[2mms[22m[39m
   [32m✓[39m ErrorBoundary[2m > [22mrenders a custom fallback UI[32m 10[2mms[22m[39m
   [32m✓[39m ErrorBoundary[2m > [22mcalls onError callback when an error is caught[32m 29[2mms[22m[39m
   [32m✓[39m ErrorBoundary[2m > [22mshows/hides error details[32m 98[2mms[22m[39m
[31m   [31m×[31m ErrorBoundary[2m > [22mresets the error state when resetKeys prop changes[39m[32m 81[2mms[22m[39m
[31m     → expected <h2 …(1)></h2> to be null[39m
[31m   [31m×[31m ErrorBoundary[2m > [22mcalls handleRetry, handleReload, and handleGoHome[39m[33m 959[2mms[22m[39m
[31m     → expected <h2 …(1)></h2> to be null[39m
[90mstdout[2m | src/components/JobList.test.tsx[2m > [22m[2mJobList Component[2m > [22m[2mrenders job list container
[22m[39m🎯 JobList render - initialized: [33mfalse[39m isInitializing: [33mfalse[39m loading: [33mfalse[39m jobs.length: [33m2[39m

[90mstdout[2m | src/components/JobList.test.tsx[2m > [22m[2mJobList Component[2m > [22m[2mrenders jobs after loading
[22m[39m🎯 JobList render - initialized: [33mfalse[39m isInitializing: [33mfalse[39m loading: [33mfalse[39m jobs.length: [33m2[39m

[90mstdout[2m | src/components/JobList.test.tsx[2m > [22m[2mJobList Component[2m > [22m[2mdisplays job classifications
[22m[39m🎯 JobList render - initialized: [33mfalse[39m isInitializing: [33mfalse[39m loading: [33mfalse[39m jobs.length: [33m2[39m

[90mstdout[2m | src/components/JobList.test.tsx[2m > [22m[2mJobList Component[2m > [22m[2mdisplays job languages
[22m[39m🎯 JobList render - initialized: [33mfalse[39m isInitializing: [33mfalse[39m loading: [33mfalse[39m jobs.length: [33m2[39m

[90mstderr[2m | src/components/ui/transitions.test.tsx[2m > [22m[2mFadeTransition[2m > [22m[2munmounts after duration when show becomes false
[22m[39mAn update to FadeTransition inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

[90mstdout[2m | src/components/JobList.test.tsx[2m > [22m[2mJobList Component[2m > [22m[2mshows total count in header
[22m[39m🎯 JobList render - initialized: [33mfalse[39m isInitializing: [33mfalse[39m loading: [33mfalse[39m jobs.length: [33m2[39m

[90mstdout[2m | src/components/JobList.test.tsx[2m > [22m[2mJobList Component[2m > [22m[2mhandles empty job list
[22m[39m🎯 JobList render - initialized: [33mfalse[39m isInitializing: [33mfalse[39m loading: [33mfalse[39m jobs.length: [33m0[39m

[90mstdout[2m | src/components/JobList.test.tsx[2m > [22m[2mJobList Component[2m > [22m[2mhandles error gracefully
[22m[39m🎯 JobList render - initialized: [33mfalse[39m isInitializing: [33mfalse[39m loading: [33mfalse[39m jobs.length: [33m2[39m

[90mstderr[2m | src/components/ui/transitions.test.tsx[2m > [22m[2mSlideTransition[2m > [22m[2munmounts after duration when show becomes false
[22m[39mAn update to SlideTransition inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

[90mstdout[2m | src/components/JobList.test.tsx[2m > [22m[2mJobList Component[2m > [22m[2mfilters by search term
[22m[39m🎯 JobList render - initialized: [33mfalse[39m isInitializing: [33mfalse[39m loading: [33mfalse[39m jobs.length: [33m2[39m
🎯 JobList render - initialized: [33mfalse[39m isInitializing: [33mfalse[39m loading: [33mfalse[39m jobs.length: [33m2[39m

[90mstdout[2m | src/components/JobList.test.tsx[2m > [22m[2mJobList Component[2m > [22m[2mfilters by classification
[22m[39m🎯 JobList render - initialized: [33mfalse[39m isInitializing: [33mfalse[39m loading: [33mfalse[39m jobs.length: [33m2[39m

[90mstdout[2m | src/components/JobList.test.tsx[2m > [22m[2mJobList Component[2m > [22m[2mfilters by language
[22m[39m🎯 JobList render - initialized: [33mfalse[39m isInitializing: [33mfalse[39m loading: [33mfalse[39m jobs.length: [33m2[39m

[90mstdout[2m | src/components/JobList.test.tsx[2m > [22m[2mJobList Component[2m > [22m[2mhandles pagination with load more
[22m[39m🎯 JobList render - initialized: [33mfalse[39m isInitializing: [33mfalse[39m loading: [33mfalse[39m jobs.length: [33m2[39m

[90mstdout[2m | src/components/JobList.test.tsx[2m > [22m[2mJobList Component[2m > [22m[2mloads more jobs on button click
[22m[39m🎯 JobList render - initialized: [33mfalse[39m isInitializing: [33mfalse[39m loading: [33mfalse[39m jobs.length: [33m2[39m

[90mstdout[2m | src/components/JobList.test.tsx[2m > [22m[2mJobList Component[2m > [22m[2mshows job details on click
[22m[39m🎯 JobList render - initialized: [33mfalse[39m isInitializing: [33mfalse[39m loading: [33mfalse[39m jobs.length: [33m2[39m

[90mstdout[2m | src/components/JobList.test.tsx[2m > [22m[2mJobList Component[2m > [22m[2mrefreshes data on refresh button click
[22m[39m🎯 JobList render - initialized: [33mfalse[39m isInitializing: [33mfalse[39m loading: [33mfalse[39m jobs.length: [33m2[39m

[90mstdout[2m | src/components/JobList.test.tsx[2m > [22m[2mJobList Component[2m > [22m[2mdisplays loading indicator when loading
[22m[39m🎯 JobList render - initialized: [33mfalse[39m isInitializing: [33mfalse[39m loading: [33mtrue[39m jobs.length: [33m0[39m

[90mstdout[2m | src/components/JobList.test.tsx[2m > [22m[2mJobList Component[2m > [22m[2mcalls fetch and stats when Load Data button is clicked
[22m[39m🎯 JobList render - initialized: [33mfalse[39m isInitializing: [33mfalse[39m loading: [33mfalse[39m jobs.length: [33m0[39m
🎯 JobList render - initialized: [33mfalse[39m isInitializing: [33mtrue[39m loading: [33mfalse[39m jobs.length: [33m0[39m

[90mstdout[2m | src/components/JobList.test.tsx[2m > [22m[2mJobList Component[2m > [22m[2mcalls fetch and stats when Load Data button is clicked
[22m[39m🎯 JobList render - initialized: [33mtrue[39m isInitializing: [33mfalse[39m loading: [33mfalse[39m jobs.length: [33m0[39m

[90mstdout[2m | src/components/JobList.test.tsx[2m > [22m[2mJobList Component[2m > [22m[2mdisplays formatted dates
[22m[39m🎯 JobList render - initialized: [33mfalse[39m isInitializing: [33mfalse[39m loading: [33mfalse[39m jobs.length: [33m2[39m

[90mstdout[2m | src/components/JobList.test.tsx[2m > [22m[2mJobList Component[2m > [22m[2mdisplays job information correctly
[22m[39m🎯 JobList render - initialized: [33mfalse[39m isInitializing: [33mfalse[39m loading: [33mfalse[39m jobs.length: [33m2[39m

[90mstdout[2m | src/components/JobList.test.tsx[2m > [22m[2mJobList Component[2m > [22m[2mhandles keyboard search on Enter
[22m[39m🎯 JobList render - initialized: [33mfalse[39m isInitializing: [33mfalse[39m loading: [33mfalse[39m jobs.length: [33m2[39m
🎯 JobList render - initialized: [33mfalse[39m isInitializing: [33mfalse[39m loading: [33mfalse[39m jobs.length: [33m2[39m

 [32m✓[39m src/components/layout/JDDBLayout.test.tsx [2m([22m[2m6 tests[22m[2m)[22m[33m 2048[2mms[22m[39m
   [33m[2m✓[22m[39m JDDBLayout[2m > [22mshows the back button and handles onBack event [33m 1485[2mms[22m[39m
[90mstdout[2m | src/components/JobList.test.tsx[2m > [22m[2mJobList Component[2m > [22m[2mshows processing status overview
[22m[39m🎯 JobList render - initialized: [33mfalse[39m isInitializing: [33mfalse[39m loading: [33mfalse[39m jobs.length: [33m2[39m

 [32m✓[39m src/components/JobList.test.tsx [2m([22m[2m20 tests[22m[2m)[22m[33m 2190[2mms[22m[39m
 [32m✓[39m src/components/ui/transitions.test.tsx [2m([22m[2m47 tests[22m[2m)[22m[33m 1801[2mms[22m[39m
   [33m[2m✓[22m[39m TabTransition[2m > [22mtransitions to new tab content [33m 349[2mms[22m[39m
   [33m[2m✓[22m[39m ModalTransition[2m > [22mresets body overflow after hiding [33m 319[2mms[22m[39m
[90mstderr[2m | src/components/ui/animated-counter.test.tsx[2m > [22m[2mAnimatedCounter[2m > [22m[2mrespects the delay prop
[22m[39mAn update to AnimatedCounter inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

 [32m✓[39m src/components/ui/animated-counter.test.tsx [2m([22m[2m4 tests[22m[2m)[22m[33m 1034[2mms[22m[39m
   [33m[2m✓[22m[39m AnimatedCounter[2m > [22mrespects the delay prop [33m 678[2mms[22m[39m
 [32m✓[39m src/components/ui/empty-state.test.tsx [2m([22m[2m4 tests[22m[2m)[22m[33m 615[2mms[22m[39m
   [33m[2m✓[22m[39m EmptyState[2m > [22mrenders custom title, description, and actions [33m 326[2mms[22m[39m
 [32m✓[39m src/components/ui/design-system.test.tsx [2m([22m[2m15 tests[22m[2m)[22m[33m 1151[2mms[22m[39m
   [33m[2m✓[22m[39m Design System Components[2m > [22mContentSection[2m > [22mrenders header actions [33m 334[2mms[22m[39m
 [32m✓[39m src/contexts/LoadingContext.test.tsx [2m([22m[2m15 tests[22m[2m)[22m[33m 303[2mms[22m[39m
 [32m✓[39m src/components/dashboard/StatsOverview.test.tsx [2m([22m[2m9 tests[22m[2m)[22m[33m 398[2mms[22m[39m
 [32m✓[39m src/components/dashboard/RecentJobsList.test.tsx [2m([22m[2m10 tests[22m[2m)[22m[33m 361[2mms[22m[39m
[90mstdout[2m | src/lib/store.test.ts[2m > [22m[2museStore with dependency injection[2m > [22m[2mfetchJobs[2m > [22m[2mfetches jobs successfully and updates state
[22m[39m[2025-10-11T23:52:35.436Z] [DEBUG] fetchJobs started { reset: [33mfalse[39m }
[2025-10-11T23:52:35.437Z] [DEBUG] Calling api.listJobs { skip: [33m0[39m, limit: [33m20[39m }

[90mstdout[2m | src/lib/store.test.ts[2m > [22m[2museStore with dependency injection[2m > [22m[2mfetchJobs[2m > [22m[2mfetches jobs successfully and updates state
[22m[39m[2025-10-11T23:52:35.439Z] [DEBUG] fetchJobs response received {
  jobsCount: [33m2[39m,
  pagination: { skip: [33m0[39m, limit: [33m20[39m, total: [33m2[39m, has_more: [33mfalse[39m }
}
[2025-10-11T23:52:35.439Z] [DEBUG] fetchJobs state updated 

[90mstdout[2m | src/lib/store.test.ts[2m > [22m[2museStore with dependency injection[2m > [22m[2mfetchJobs[2m > [22m[2mresets jobs when reset=true
[22m[39m[2025-10-11T23:52:35.448Z] [DEBUG] fetchJobs started { reset: [33mtrue[39m }
[2025-10-11T23:52:35.448Z] [DEBUG] Calling api.listJobs { skip: [33m0[39m, limit: [33m20[39m }

[90mstdout[2m | src/lib/store.test.ts[2m > [22m[2museStore with dependency injection[2m > [22m[2mfetchJobs[2m > [22m[2mresets jobs when reset=true
[22m[39m[2025-10-11T23:52:35.449Z] [DEBUG] fetchJobs response received {
  jobsCount: [33m2[39m,
  pagination: { skip: [33m0[39m, limit: [33m20[39m, total: [33m2[39m, has_more: [33mfalse[39m }
}
[2025-10-11T23:52:35.449Z] [DEBUG] fetchJobs state updated 

[90mstdout[2m | src/lib/store.test.ts[2m > [22m[2museStore with dependency injection[2m > [22m[2mfetchJobs[2m > [22m[2mappends jobs when reset=false
[22m[39m[2025-10-11T23:52:35.456Z] [DEBUG] fetchJobs started { reset: [33mfalse[39m }
[2025-10-11T23:52:35.457Z] [DEBUG] Calling api.listJobs { skip: [33m0[39m, limit: [33m20[39m }

[90mstdout[2m | src/lib/store.test.ts[2m > [22m[2museStore with dependency injection[2m > [22m[2mfetchJobs[2m > [22m[2mappends jobs when reset=false
[22m[39m[2025-10-11T23:52:35.459Z] [DEBUG] fetchJobs response received {
  jobsCount: [33m2[39m,
  pagination: { skip: [33m0[39m, limit: [33m20[39m, total: [33m2[39m, has_more: [33mfalse[39m }
}
[2025-10-11T23:52:35.459Z] [DEBUG] fetchJobs state updated 

[90mstdout[2m | src/lib/store.test.ts[2m > [22m[2museStore with dependency injection[2m > [22m[2mfetchJobs[2m > [22m[2mhandles errors correctly
[22m[39m[2025-10-11T23:52:35.461Z] [DEBUG] fetchJobs started { reset: [33mfalse[39m }
[2025-10-11T23:52:35.461Z] [DEBUG] Calling api.listJobs { skip: [33m0[39m, limit: [33m20[39m }

[90mstderr[2m | src/lib/store.test.ts[2m > [22m[2museStore with dependency injection[2m > [22m[2mfetchJobs[2m > [22m[2mhandles errors correctly
[22m[39m[2025-10-11T23:52:35.462Z] [ERROR] fetchJobs error: {
  message: [32m'Network error'[39m,
  stack: [32m'Error: Network error\n'[39m +
    [32m'    at Object.listJobs (C:\\JDDB\\src\\lib\\store.test.ts:155:17)\n'[39m +
    [32m'    at fetchJobs (C:\\JDDB\\src\\lib\\store.ts:74:34)\n'[39m +
    [32m'    at C:\\JDDB\\src\\lib\\store.test.ts:161:13\n'[39m +
    [32m'    at file:///C:/JDDB/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n'[39m +
    [32m'    at file:///C:/JDDB/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n'[39m +
    [32m'    at file:///C:/JDDB/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n'[39m +
    [32m'    at new Promise (<anonymous>)\n'[39m +
    [32m'    at runWithTimeout (file:///C:/JDDB/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n'[39m +
    [32m'    at runTest (file:///C:/JDDB/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)\n'[39m +
    [32m'    at processTicksAndRejections (node:internal/process/task_queues:105:5)'[39m
}

[90mstdout[2m | src/lib/store.test.ts[2m > [22m[2museStore with dependency injection[2m > [22m[2mfetchJobs[2m > [22m[2mapplies filters when fetching
[22m[39m[2025-10-11T23:52:35.473Z] [DEBUG] fetchJobs started { reset: [33mfalse[39m }
[2025-10-11T23:52:35.474Z] [DEBUG] Calling api.listJobs { skip: [33m0[39m, limit: [33m20[39m, classification: [32m'EX-01'[39m, language: [32m'en'[39m }

[90mstdout[2m | src/lib/store.test.ts[2m > [22m[2museStore with dependency injection[2m > [22m[2mfetchJobs[2m > [22m[2mapplies filters when fetching
[22m[39m[2025-10-11T23:52:35.474Z] [DEBUG] fetchJobs response received {
  jobsCount: [33m0[39m,
  pagination: { skip: [33m0[39m, limit: [33m20[39m, total: [33m0[39m, has_more: [33mfalse[39m }
}
[2025-10-11T23:52:35.474Z] [DEBUG] fetchJobs state updated 

[90mstdout[2m | src/lib/store.test.ts[2m > [22m[2museStore with dependency injection[2m > [22m[2mfetchJobs[2m > [22m[2msets loading state during fetch
[22m[39m[2025-10-11T23:52:35.476Z] [DEBUG] fetchJobs started { reset: [33mfalse[39m }
[2025-10-11T23:52:35.476Z] [DEBUG] Calling api.listJobs { skip: [33m0[39m, limit: [33m20[39m }

[90mstdout[2m | src/lib/store.test.ts[2m > [22m[2museStore with dependency injection[2m > [22m[2mfetchJobs[2m > [22m[2msets loading state during fetch
[22m[39m[2025-10-11T23:52:35.476Z] [DEBUG] fetchJobs response received {
  jobsCount: [33m0[39m,
  pagination: { skip: [33m0[39m, limit: [33m20[39m, total: [33m0[39m, has_more: [33mfalse[39m }
}
[2025-10-11T23:52:35.477Z] [DEBUG] fetchJobs state updated 

[90mstdout[2m | src/lib/store.test.ts[2m > [22m[2museStore with dependency injection[2m > [22m[2mfetchStats[2m > [22m[2mfetches stats successfully
[22m[39m[2025-10-11T23:52:35.478Z] [DEBUG] fetchStats started 
[2025-10-11T23:52:35.478Z] [DEBUG] Calling api.getProcessingStatus 

[90mstdout[2m | src/lib/store.test.ts[2m > [22m[2museStore with dependency injection[2m > [22m[2mfetchStats[2m > [22m[2mfetches stats successfully
[22m[39m[2025-10-11T23:52:35.478Z] [DEBUG] fetchStats response received {
  stats: {
    total_jobs: [33m100[39m,
    by_classification: { [32m'EX-01'[39m: [33m50[39m, [32m'EX-02'[39m: [33m30[39m, [32m'EX-03'[39m: [33m20[39m },
    by_language: { en: [33m60[39m, fr: [33m40[39m },
    processing_status: {
      pending: [33m5[39m,
      processing: [33m10[39m,
      completed: [33m80[39m,
      failed: [33m3[39m,
      needs_review: [33m2[39m
    },
    last_updated: [32m'2024-01-01T00:00:00Z'[39m
  }
}
[2025-10-11T23:52:35.479Z] [DEBUG] fetchStats state updated 

[90mstdout[2m | src/lib/store.test.ts[2m > [22m[2museStore with dependency injection[2m > [22m[2mfetchStats[2m > [22m[2mhandles errors silently
[22m[39m[2025-10-11T23:52:35.480Z] [DEBUG] fetchStats started 
[2025-10-11T23:52:35.480Z] [DEBUG] Calling api.getProcessingStatus 

[90mstderr[2m | src/lib/store.test.ts[2m > [22m[2museStore with dependency injection[2m > [22m[2mfetchStats[2m > [22m[2mhandles errors silently
[22m[39m[2025-10-11T23:52:35.480Z] [ERROR] fetchStats error: {
  message: [32m'Stats error'[39m,
  stack: [32m'Error: Stats error\n'[39m +
    [32m'    at Object.getProcessingStatus (C:\\JDDB\\src\\lib\\store.test.ts:240:17)\n'[39m +
    [32m'    at fetchStats (C:\\JDDB\\src\\lib\\store.ts:100:34)\n'[39m +
    [32m'    at C:\\JDDB\\src\\lib\\store.test.ts:246:13\n'[39m +
    [32m'    at file:///C:/JDDB/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n'[39m +
    [32m'    at file:///C:/JDDB/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n'[39m +
    [32m'    at file:///C:/JDDB/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n'[39m +
    [32m'    at new Promise (<anonymous>)\n'[39m +
    [32m'    at runWithTimeout (file:///C:/JDDB/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n'[39m +
    [32m'    at runTest (file:///C:/JDDB/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)\n'[39m +
    [32m'    at processTicksAndRejections (node:internal/process/task_queues:105:5)'[39m
}

 [32m✓[39m src/lib/store.test.ts [2m([22m[2m18 tests[22m[2m)[22m[32m 98[2mms[22m[39m
 [32m✓[39m src/lib/utils.test.ts [2m([22m[2m23 tests[22m[2m)[22m[32m 37[2mms[22m[39m
 [32m✓[39m src/components/dashboard/QuickActionsGrid.test.tsx [2m([22m[2m12 tests[22m[2m)[22m[32m 270[2mms[22m[39m

[31m⎯⎯⎯⎯⎯⎯⎯[39m[1m[41m Failed Tests 5 [49m[22m[31m⎯⎯⎯⎯⎯⎯⎯[39m

[41m[1m FAIL [22m[49m src/lib/api.test.ts[2m > [22mJDDBApiClient[2m > [22mtestConnection[2m > [22mshould return false when API returns error status
[31m[1mAssertionError[22m: expected true to be false // Object.is equality[39m

[32m- Expected[39m
[31m+ Received[39m

[32m- false[39m
[31m+ true[39m

[36m [2m❯[22m src/lib/api.test.ts:[2m102:22[22m[39m
    [90m100| [39m
    [90m101| [39m      [35mconst[39m result [33m=[39m [35mawait[39m apiClient[33m.[39m[34mtestConnection[39m()[33m;[39m
    [90m102| [39m      [34mexpect[39m(result)[33m.[39m[34mtoBe[39m([35mfalse[39m)[33m;[39m
    [90m   | [39m                     [31m^[39m
    [90m103| [39m    })[33m;[39m
    [90m104| [39m  })[33m;[39m

[31m[2m⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/5]⎯[22m[39m

[41m[1m FAIL [22m[49m src/components/ui/error-boundary.test.tsx[2m > [22mErrorBoundary[2m > [22mresets the error state when resetKeys prop changes
[31m[1mAssertionError[22m: expected <h2 …(1)></h2> to be null[39m

[32m- Expected:[39m 
null

[31m+ Received:[39m 
<h2
  class="text-2xl font-bold text-gray-900 mb-2"
>
  Oops! Something went wrong
</h2>

[36m [2m❯[22m src/components/ui/error-boundary.test.tsx:[2m94:7[22m[39m
    [90m 92| [39m    [34mexpect[39m(
    [90m 93| [39m      screen[33m.[39m[34mqueryByText[39m([32m"Oops! Something went wrong"[39m)[33m,[39m
    [90m 94| [39m    )[33m.[39m[34mtoBeNull[39m()[33m;[39m
    [90m   | [39m      [31m^[39m
    [90m 95| [39m  })[33m;[39m
    [90m 96| [39m

[31m[2m⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/5]⎯[22m[39m

[41m[1m FAIL [22m[49m src/components/ui/error-boundary.test.tsx[2m > [22mErrorBoundary[2m > [22mcalls handleRetry, handleReload, and handleGoHome
[31m[1mAssertionError[22m: expected <h2 …(1)></h2> to be null[39m

[32m- Expected:[39m 
null

[31m+ Received:[39m 
<h2
  class="text-2xl font-bold text-gray-900 mb-2"
>
  Oops! Something went wrong
</h2>

[36m [2m❯[22m src/components/ui/error-boundary.test.tsx:[2m131:7[22m[39m
    [90m129| [39m    [34mexpect[39m(
    [90m130| [39m      screen[33m.[39m[34mqueryByText[39m([32m"Oops! Something went wrong"[39m)[33m,[39m
    [90m131| [39m    )[33m.[39m[34mtoBeNull[39m()[33m;[39m
    [90m   | [39m      [31m^[39m
    [90m132| [39m
    [90m133| [39m    [34mrender[39m(

[31m[2m⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[3/5]⎯[22m[39m

[41m[1m FAIL [22m[49m src/components/ui/skeleton.test.tsx[2m > [22mSkeleton Components[2m > [22mSkeletonList[2m > [22mrenders the correct number of skeleton job cards
[31m[1mAssertionError[22m: expected <div …(1)>…(2)</div>
…(8) to have a length of 3 but got 9[39m

[32m- Expected[39m
[31m+ Received[39m

[32m- 3[39m
[31m+ 9[39m

[36m [2m❯[22m src/components/ui/skeleton.test.tsx:[2m63:62[22m[39m
    [90m 61| [39m    [34mit[39m([32m"renders the correct number of skeleton job cards"[39m[33m,[39m () [33m=>[39m {
    [90m 62| [39m      [35mconst[39m { container } [33m=[39m [34mrender[39m([33m<[39m[33mSkeletonList[39m [33mcount[39m[33m=[39m[33m{[39m[34m3[39m[33m}[39m [33m/[39m[33m>[39m)[33m;[39m
    [90m 63| [39m      expect(container.querySelectorAll(".space-y-3 > div")).toHaveLen…
    [90m   | [39m                                                             [31m^[39m
    [90m 64| [39m    })[33m;[39m
    [90m 65| [39m  })[33m;[39m

[31m[2m⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[4/5]⎯[22m[39m

[41m[1m FAIL [22m[49m src/components/ui/skeleton.test.tsx[2m > [22mSkeleton Components[2m > [22mSkeletonLoader[2m > [22mrenders the correct skeleton based on the type prop
[31m[1mError[22m: [2mexpect([22m[31mreceived[31m[2m).toBeInTheDocument()[22m

[31mreceived[31m value must be an HTMLElement or an SVGElement.
Received has type:  Null
Received has value: [31mnull[31m[39m
[36m [2m❯[22m src/components/ui/skeleton.test.tsx:[2m86:55[22m[39m
    [90m 84| [39m
    [90m 85| [39m      [34mrerender[39m([33m<[39m[33mSkeletonLoader[39m [33mtype[39m[33m=[39m[32m"stats-dashboard"[39m [33m/[39m[33m>[39m)[33m;[39m
    [90m 86| [39m      expect(container.querySelector(".grid-cols-4")).toBeInTheDocumen…
    [90m   | [39m                                                      [31m^[39m
    [90m 87| [39m
    [90m 88| [39m      [34mrerender[39m([33m<[39m[33mSkeletonLoader[39m [33mtype[39m[33m=[39m[32m"search-results"[39m [33m/[39m[33m>[39m)[33m;[39m

[31m[2m⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[5/5]⎯[22m[39m


[2m Test Files [22m [1m[31m3 failed[39m[22m[2m | [22m[1m[32m12 passed[39m[22m[90m (15)[39m
[2m      Tests [22m [1m[31m5 failed[39m[22m[2m | [22m[1m[32m255 passed[39m[22m[90m (260)[39m
[2m   Start at [22m 19:52:11
[2m   Duration [22m 26.62s[2m (transform 1.58s, setup 4.98s, collect 23.00s, tests 13.24s, environment 26.98s, prepare 3.88s)[22m

