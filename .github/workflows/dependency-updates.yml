name: Dependency Updates & Security

on:
  schedule:
    # Run weekly on Mondays at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

jobs:
  update-python-dependencies:
    name: Update Python Dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: "1.8.3"

      - name: Update dependencies
        working-directory: ./backend
        run: |
          poetry update
          poetry export -f requirements.txt --output requirements.txt --without-hashes

      - name: Run security audit
        working-directory: ./backend
        run: |
          poetry add --group dev safety
          poetry run safety check

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: update Python dependencies"
          title: "ðŸ”„ Weekly Python dependency updates"
          body: |
            ## Automated Dependency Updates

            This PR contains automated updates to Python dependencies.

            ### Changes
            - Updated Poetry dependencies to latest compatible versions
            - Regenerated requirements.txt
            - Ran security audit with Safety

            ### Verification
            - [ ] All tests pass
            - [ ] No new security vulnerabilities introduced
            - [ ] Application still functions correctly

            **Auto-generated by GitHub Actions**
          branch: automated/update-python-deps
          delete-branch: true

  update-node-dependencies:
    name: Update Node.js Dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Update dependencies
        run: |
          bun update
          bun audit

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: update Node.js dependencies"
          title: "ðŸ”„ Weekly Node.js dependency updates"
          body: |
            ## Automated Dependency Updates

            This PR contains automated updates to Node.js dependencies.

            ### Changes
            - Updated package.json dependencies to latest compatible versions
            - Ran security audit with bun audit

            ### Verification
            - [ ] Frontend builds successfully
            - [ ] No new security vulnerabilities introduced
            - [ ] Application still functions correctly

            **Auto-generated by GitHub Actions**
          branch: automated/update-node-deps
          delete-branch: true

  security-scan:
    name: Security Vulnerability Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'

      - name: Run Trivy vulnerability scanner for critical issues
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  codeql-analysis:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ['python', 'javascript']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"
