{
  "permissions": {
    "allow": [
      "Bash(call venv/Scripts/activate)",
      "Bash(python:*)",
      "Bash(venv/Scripts/activate:*)",
      "Bash(psql:*)",
      "Bash(venv/Scripts/python -c \"import sqlalchemy; print(''SQLAlchemy version:'', sqlalchemy.__version__)\")",
      "Bash(venv/Scripts/python:*)",
      "Bash(./server.bat)",
      "Bash(curl:*)",
      "Bash(./frontend.bat)",
      "Bash(npm install:*)",
      "Bash(where bun)",
      "Bash(dir:*)",
      "Bash(rm:*)",
      "Bash(findstr:*)",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_take_screenshot",
      "mcp__playwright__browser_click",
      "Bash(make:*)",
      "Bash(venvScripts:*)",
      "Bash(pip install:*)",
      "Bash(call venvScriptsactivate.bat)",
      "Bash(. venv/Scripts/activate)",
      "mcp__playwright__browser_wait_for",
      "Bash(bun:*)",
      "mcp__playwright__browser_snapshot",
      "mcp__playwright__browser_close",
      "mcp__playwright__browser_file_upload",
      "mcp__playwright__browser_console_messages",
      "Bash(alembic current:*)",
      "Bash(call venvScriptsactivate)",
      "Bash(timeout:*)",
      "Bash(find:*)",
      "mcp__playwright__browser_press_key",
      "Bash(sed:*)",
      "mcp__playwright__browser_type",
      "mcp__playwright__browser_handle_dialog",
      "mcp__playwright__browser_select_option",
      "Bash(copy page_updated.tsx page.tsx)",
      "Bash(redis-cli:*)",
      "Bash(where redis-server)",
      "Read(//c/**)",
      "Bash(alembic upgrade:*)",
      "Bash(celery:*)",
      "Bash(set PYTHONPATH=C:/JDDB/backend/src)",
      "Bash(../venv/Scripts/activate)",
      "Bash(alembic revision:*)",
      "Bash(tasklist)",
      "Bash(copy:*)",
      "Bash(npx playwright:*)",
      "Bash(call venv/Scripts/activate.bat)",
      "Bash(netstat:*)",
      "Bash(taskkill:*)",
      "Bash(.server.bat)",
      "Bash(del test_processor.py)",
      "mcp__playwright__browser_hover",
      "mcp__playwright__browser_evaluate",
      "mcp__playwright__browser_resize",
      "Bash(npx tsc:*)",
      "Bash(del \"C:\\JDDB\\backend\\src\\jd_ingestion\\services\\optimized_embedding_service.py\")",
      "Bash(poetry run:*)",
      "Bash(poetry --version)",
      "Bash(poetry add:*)",
      "Bash(poetry install:*)",
      "Bash(poetry lock:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)"
    ],
    "deny": [],
    "ask": []
  }
}