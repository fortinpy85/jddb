{
  "permissions": {
    "allow": [
      "Bash(done)",
      "Bash(poetry run alembic:*)",
      "Bash(poetry run python:*)",
      "Bash(poetry run mypy:*)",
      "Bash(poetry add:*)",
      "Bash(find:*)",
      "Bash(git add:*)",
      "Bash(pre-commit run:*)",
      "Bash(python -m mypy:*)",
      "Bash(git commit:*)",
      "Bash(git reset:*)",
      "Bash(git push:*)",
      "Bash(poetry run pytest:*)",
      "Bash(poetry show:*)",
      "Bash(git checkout:*)",
      "Bash(dir:*)",
      "Bash(grep:*)",
      "Bash(poetry run:*)",
      "Bash(bun:*)",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_wait_for",
      "mcp__playwright__browser_snapshot",
      "mcp__playwright__browser_take_screenshot",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_type",
      "mcp__playwright__browser_close",
      "Bash(curl -X POST \"http://localhost:8000/api/translation-memory/search\" -H \"Content-Type: application/json\" -d '{\"\"source_text\"\": \"\"strategic planning\"\", \"\"source_language\"\": \"\"en\"\", \"\"target_language\"\": \"\"fr\"\", \"\"min_similarity\"\": 0.7, \"\"limit\"\": 5}')",
      "Bash(curl -X POST \"http://localhost:8000/api/translation-memory/search?query_text=strategic+planning&source_language=en&target_language=fr&similarity_threshold=0.7&limit=5\")",
      "Bash(curl -X GET \"http://localhost:8000/api/templates/classifications\")",
      "Bash(curl -X GET \"http://localhost:8000/api/templates/generate/EC?language=en&level=01\")",
      "Bash(curl -X GET \"http://localhost:8000/api/templates/bilingual/PM?level=02\")",
      "Bash(python:*)",
      "Bash(curl:*)",
      "Bash(timeout 20 poetry run pytest tests/unit/test_connection.py -v --tb=short -p no:xdist)",
      "Bash(timeout:*)",
      "Bash(awk:*)",
      "Bash(netstat:*)",
      "Bash(findstr:*)",
      "Bash(taskkill:*)",
      "mcp__playwright__browser_resize",
      "mcp__playwright__browser_console_messages",
      "mcp__playwright__browser_evaluate",
      "WebFetch(domain:wet-boew.github.io)",
      "WebFetch(domain:github.com)",
      "WebSearch",
      "Bash(del nul)",
      "Bash(git restore:*)",
      "Bash(git mv:*)"
    ],
    "deny": [],
    "ask": []
  }
}
