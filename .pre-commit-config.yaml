repos:
  # Python code formatting and linting
#  - repo: https://github.com/psf/black
#    rev: 24.8.0
#    hooks:
#      - id: black
#        name: Format Python code with Black
#        files: '^backend/.*\.py$'
#        args: ['--line-length=88']

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.6.9
    hooks:
      - id: ruff
        name: Lint Python code with Ruff
        files: '^backend/.*\.py$'
        args: [--fix]
      - id: ruff-format
        name: Format Python code with Ruff
        files: '^backend/.*\.py$'

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.11.2
    hooks:
      - id: mypy
        name: Type check Python code with MyPy
        files: '^backend/src/.*\.py$'
        additional_dependencies:
          - types-requests
          - types-redis
          - types-psycopg2
          - types-PyYAML
          - types-setuptools

  # JavaScript/TypeScript formatting and linting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        name: Format frontend code with Prettier
        files: '^src/.*\.(ts|tsx|js|jsx|json|css|md)$'
        additional_dependencies:
          - prettier@3.6.2

  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
        name: Remove trailing whitespace
      - id: end-of-file-fixer
        name: Ensure files end with newline
      - id: check-yaml
        name: Check YAML syntax
      - id: check-json
        name: Check JSON syntax
      - id: check-toml
        name: Check TOML syntax
      - id: check-merge-conflict
        name: Check for merge conflict markers
      - id: check-added-large-files
        name: Check for large files
        args: ['--maxkb=1024']
      - id: check-case-conflict
        name: Check for case conflicts
      - id: mixed-line-ending
        name: Check for mixed line endings

  # Security checks
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        name: Detect secrets in code
        args: ['--baseline', '.secrets.baseline']
        exclude: package-lock.json

  # Database migration checks
  - repo: local
    hooks:
      - id: check-migrations
        name: Check for pending database migrations
        entry: bash -c 'cd backend && poetry run alembic check || true'
        language: system
        pass_filenames: false
        files: '^backend/alembic/versions/.*\.py$'

  # Frontend build check (optional - can be slow)
  - repo: local
    hooks:
      - id: frontend-build-check
        name: Check frontend builds successfully
        entry: bash -c 'echo "üèóÔ∏è  Checking frontend build..." && npm run build'
        language: system
        pass_filenames: false
        files: '^(src/|package\.json|tsconfig\.json|\.env\.local).*$'
        stages: [manual]  # Only run when explicitly requested
