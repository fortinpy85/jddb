"""Add analytics and quality metrics tables

Revision ID: b6ccdf00a4c0
Revises: 908f6218c513
Create Date: 2025-09-13 12:24:37.111363

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "b6ccdf00a4c0"
down_revision = "908f6218c513"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "ai_usage_tracking",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("request_timestamp", sa.DateTime(), nullable=True),
        sa.Column("service_type", sa.String(length=50), nullable=True),
        sa.Column("operation_type", sa.String(length=50), nullable=True),
        sa.Column("input_tokens", sa.Integer(), nullable=True),
        sa.Column("output_tokens", sa.Integer(), nullable=True),
        sa.Column("total_tokens", sa.Integer(), nullable=True),
        sa.Column("cost_usd", sa.DECIMAL(precision=10, scale=6), nullable=True),
        sa.Column("request_id", sa.String(length=100), nullable=True),
        sa.Column("model_name", sa.String(length=100), nullable=True),
        sa.Column("success", sa.String(length=10), nullable=True),
        sa.Column("error_message", sa.Text(), nullable=True),
        sa.Column(
            "request_metadata", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "system_metrics",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("timestamp", sa.DateTime(), nullable=True),
        sa.Column("metric_type", sa.String(length=50), nullable=True),
        sa.Column("total_requests", sa.Integer(), nullable=True),
        sa.Column("unique_sessions", sa.Integer(), nullable=True),
        sa.Column("total_searches", sa.Integer(), nullable=True),
        sa.Column("total_uploads", sa.Integer(), nullable=True),
        sa.Column("total_exports", sa.Integer(), nullable=True),
        sa.Column("avg_response_time_ms", sa.Integer(), nullable=True),
        sa.Column("error_rate", sa.DECIMAL(precision=5, scale=4), nullable=True),
        sa.Column("total_ai_requests", sa.Integer(), nullable=True),
        sa.Column("total_tokens_used", sa.Integer(), nullable=True),
        sa.Column(
            "total_ai_cost_usd", sa.DECIMAL(precision=12, scale=6), nullable=True
        ),
        sa.Column("total_jobs_processed", sa.Integer(), nullable=True),
        sa.Column("total_embeddings_generated", sa.Integer(), nullable=True),
        sa.Column("storage_size_bytes", sa.Integer(), nullable=True),
        sa.Column(
            "avg_data_quality_score", sa.DECIMAL(precision=4, scale=3), nullable=True
        ),
        sa.Column("period_start", sa.DateTime(), nullable=True),
        sa.Column("period_end", sa.DateTime(), nullable=True),
        sa.Column(
            "detailed_metrics", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "usage_analytics",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("timestamp", sa.DateTime(), nullable=True),
        sa.Column("session_id", sa.String(length=100), nullable=True),
        sa.Column("user_id", sa.String(length=100), nullable=True),
        sa.Column("ip_address", sa.String(length=45), nullable=True),
        sa.Column("user_agent", sa.String(length=500), nullable=True),
        sa.Column("action_type", sa.String(length=50), nullable=True),
        sa.Column("endpoint", sa.String(length=200), nullable=True),
        sa.Column("http_method", sa.String(length=10), nullable=True),
        sa.Column("resource_id", sa.String(length=100), nullable=True),
        sa.Column("response_time_ms", sa.Integer(), nullable=True),
        sa.Column("status_code", sa.Integer(), nullable=True),
        sa.Column("search_query", sa.Text(), nullable=True),
        sa.Column(
            "search_filters", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("results_count", sa.Integer(), nullable=True),
        sa.Column("processing_time_ms", sa.Integer(), nullable=True),
        sa.Column("files_processed", sa.Integer(), nullable=True),
        sa.Column(
            "request_metadata", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "data_quality_metrics",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("job_id", sa.Integer(), nullable=True),
        sa.Column(
            "content_completeness_score",
            sa.DECIMAL(precision=4, scale=3),
            nullable=True,
        ),
        sa.Column(
            "sections_completeness_score",
            sa.DECIMAL(precision=4, scale=3),
            nullable=True,
        ),
        sa.Column(
            "metadata_completeness_score",
            sa.DECIMAL(precision=4, scale=3),
            nullable=True,
        ),
        sa.Column("has_structured_fields", sa.String(length=10), nullable=True),
        sa.Column("has_all_sections", sa.String(length=10), nullable=True),
        sa.Column("has_embeddings", sa.String(length=10), nullable=True),
        sa.Column("processing_errors_count", sa.Integer(), nullable=True),
        sa.Column("validation_errors_count", sa.Integer(), nullable=True),
        sa.Column("content_extraction_success", sa.String(length=10), nullable=True),
        sa.Column("raw_content_length", sa.Integer(), nullable=True),
        sa.Column("processed_content_length", sa.Integer(), nullable=True),
        sa.Column("sections_extracted_count", sa.Integer(), nullable=True),
        sa.Column("chunks_generated_count", sa.Integer(), nullable=True),
        sa.Column(
            "language_detection_confidence",
            sa.DECIMAL(precision=4, scale=3),
            nullable=True,
        ),
        sa.Column("encoding_issues_detected", sa.String(length=10), nullable=True),
        sa.Column(
            "validation_results", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column(
            "quality_flags", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("last_calculated", sa.DateTime(), nullable=True),
        sa.Column("calculation_version", sa.String(length=20), nullable=True),
        sa.ForeignKeyConstraint(
            ["job_id"],
            ["job_descriptions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("job_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("data_quality_metrics")
    op.drop_table("usage_analytics")
    op.drop_table("system_metrics")
    op.drop_table("ai_usage_tracking")
    # ### end Alembic commands ###
