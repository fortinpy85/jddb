"""Add translation memory tables with pgvector support

Revision ID: 8dfdfb2859ca
Revises: b66388585d28
Create Date: 2025-10-13 08:59:21.297929

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import pgvector.sqlalchemy


# revision identifiers, used by Alembic.
revision = "8dfdfb2859ca"
down_revision = "b66388585d28"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "translation_projects",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=200), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("source_language", sa.String(length=10), nullable=False),
        sa.Column("target_language", sa.String(length=10), nullable=False),
        sa.Column("project_type", sa.String(length=50), nullable=False),
        sa.Column("status", sa.String(length=20), nullable=False),
        sa.Column("created_by", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["created_by"], ["users.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_translation_projects_id"), "translation_projects", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_translation_projects_name"),
        "translation_projects",
        ["name"],
        unique=False,
    )
    op.create_index(
        op.f("ix_translation_projects_source_language"),
        "translation_projects",
        ["source_language"],
        unique=False,
    )
    op.create_index(
        op.f("ix_translation_projects_status"),
        "translation_projects",
        ["status"],
        unique=False,
    )
    op.create_index(
        op.f("ix_translation_projects_target_language"),
        "translation_projects",
        ["target_language"],
        unique=False,
    )
    op.create_table(
        "translation_memory",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("project_id", sa.Integer(), nullable=False),
        sa.Column("source_text", sa.Text(), nullable=False),
        sa.Column("target_text", sa.Text(), nullable=False),
        sa.Column("source_language", sa.String(length=10), nullable=False),
        sa.Column("target_language", sa.String(length=10), nullable=False),
        sa.Column("domain", sa.String(length=100), nullable=True),
        sa.Column("subdomain", sa.String(length=100), nullable=True),
        sa.Column("quality_score", sa.DECIMAL(precision=4, scale=3), nullable=True),
        sa.Column("confidence_score", sa.DECIMAL(precision=4, scale=3), nullable=True),
        sa.Column("usage_count", sa.Integer(), nullable=False),
        sa.Column("last_used", sa.DateTime(), nullable=True),
        sa.Column(
            "translation_metadata",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column("created_by", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["created_by"], ["users.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(
            ["project_id"], ["translation_projects.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_translation_memory_domain"),
        "translation_memory",
        ["domain"],
        unique=False,
    )
    op.create_index(
        op.f("ix_translation_memory_id"), "translation_memory", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_translation_memory_project_id"),
        "translation_memory",
        ["project_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_translation_memory_source_language"),
        "translation_memory",
        ["source_language"],
        unique=False,
    )
    op.create_index(
        op.f("ix_translation_memory_target_language"),
        "translation_memory",
        ["target_language"],
        unique=False,
    )
    op.create_table(
        "translation_embeddings",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("translation_id", sa.Integer(), nullable=False),
        sa.Column(
            "embedding", pgvector.sqlalchemy.vector.VECTOR(dim=1536), nullable=False
        ),
        sa.Column("embedding_model", sa.String(length=100), nullable=False),
        sa.Column("text_hash", sa.String(length=64), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["translation_id"], ["translation_memory.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_translation_embeddings_id"),
        "translation_embeddings",
        ["id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_translation_embeddings_text_hash"),
        "translation_embeddings",
        ["text_hash"],
        unique=False,
    )
    op.create_index(
        op.f("ix_translation_embeddings_translation_id"),
        "translation_embeddings",
        ["translation_id"],
        unique=False,
    )
    op.drop_constraint(
        op.f("content_chunks_job_id_fkey"), "content_chunks", type_="foreignkey"
    )
    op.create_foreign_key(
        None, "content_chunks", "job_descriptions", ["job_id"], ["id"]
    )
    op.drop_constraint(
        op.f("data_quality_metrics_job_id_fkey"),
        "data_quality_metrics",
        type_="foreignkey",
    )
    op.create_foreign_key(
        None, "data_quality_metrics", "job_descriptions", ["job_id"], ["id"]
    )
    op.drop_constraint(
        op.f("job_comparisons_job1_id_fkey"), "job_comparisons", type_="foreignkey"
    )
    op.drop_constraint(
        op.f("job_comparisons_job2_id_fkey"), "job_comparisons", type_="foreignkey"
    )
    op.create_foreign_key(
        None, "job_comparisons", "job_descriptions", ["job2_id"], ["id"]
    )
    op.create_foreign_key(
        None, "job_comparisons", "job_descriptions", ["job1_id"], ["id"]
    )
    op.drop_constraint(
        op.f("job_metadata_job_id_fkey"), "job_metadata", type_="foreignkey"
    )
    op.create_foreign_key(None, "job_metadata", "job_descriptions", ["job_id"], ["id"])
    op.drop_constraint(
        op.f("job_sections_job_id_fkey"), "job_sections", type_="foreignkey"
    )
    op.create_foreign_key(None, "job_sections", "job_descriptions", ["job_id"], ["id"])
    op.drop_constraint(op.f("job_skills_job_id_fkey"), "job_skills", type_="foreignkey")
    op.create_foreign_key(None, "job_skills", "job_descriptions", ["job_id"], ["id"])
    op.drop_constraint(
        op.f("rlhf_feedback_job_id_fkey"), "rlhf_feedback", type_="foreignkey"
    )
    op.create_foreign_key(
        None,
        "rlhf_feedback",
        "job_descriptions",
        ["job_id"],
        ["id"],
        ondelete="SET NULL",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "rlhf_feedback", type_="foreignkey")
    op.create_foreign_key(
        op.f("rlhf_feedback_job_id_fkey"),
        "rlhf_feedback",
        "job_descriptions",
        ["job_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "job_skills", type_="foreignkey")
    op.create_foreign_key(
        op.f("job_skills_job_id_fkey"),
        "job_skills",
        "job_descriptions",
        ["job_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "job_sections", type_="foreignkey")
    op.create_foreign_key(
        op.f("job_sections_job_id_fkey"),
        "job_sections",
        "job_descriptions",
        ["job_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "job_metadata", type_="foreignkey")
    op.create_foreign_key(
        op.f("job_metadata_job_id_fkey"),
        "job_metadata",
        "job_descriptions",
        ["job_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "job_comparisons", type_="foreignkey")
    op.drop_constraint(None, "job_comparisons", type_="foreignkey")
    op.create_foreign_key(
        op.f("job_comparisons_job2_id_fkey"),
        "job_comparisons",
        "job_descriptions",
        ["job2_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        op.f("job_comparisons_job1_id_fkey"),
        "job_comparisons",
        "job_descriptions",
        ["job1_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "data_quality_metrics", type_="foreignkey")
    op.create_foreign_key(
        op.f("data_quality_metrics_job_id_fkey"),
        "data_quality_metrics",
        "job_descriptions",
        ["job_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "content_chunks", type_="foreignkey")
    op.create_foreign_key(
        op.f("content_chunks_job_id_fkey"),
        "content_chunks",
        "job_descriptions",
        ["job_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_index(
        op.f("ix_translation_embeddings_translation_id"),
        table_name="translation_embeddings",
    )
    op.drop_index(
        op.f("ix_translation_embeddings_text_hash"), table_name="translation_embeddings"
    )
    op.drop_index(
        op.f("ix_translation_embeddings_id"), table_name="translation_embeddings"
    )
    op.drop_table("translation_embeddings")
    op.drop_index(
        op.f("ix_translation_memory_target_language"), table_name="translation_memory"
    )
    op.drop_index(
        op.f("ix_translation_memory_source_language"), table_name="translation_memory"
    )
    op.drop_index(
        op.f("ix_translation_memory_project_id"), table_name="translation_memory"
    )
    op.drop_index(op.f("ix_translation_memory_id"), table_name="translation_memory")
    op.drop_index(op.f("ix_translation_memory_domain"), table_name="translation_memory")
    op.drop_table("translation_memory")
    op.drop_index(
        op.f("ix_translation_projects_target_language"),
        table_name="translation_projects",
    )
    op.drop_index(
        op.f("ix_translation_projects_status"), table_name="translation_projects"
    )
    op.drop_index(
        op.f("ix_translation_projects_source_language"),
        table_name="translation_projects",
    )
    op.drop_index(
        op.f("ix_translation_projects_name"), table_name="translation_projects"
    )
    op.drop_index(op.f("ix_translation_projects_id"), table_name="translation_projects")
    op.drop_table("translation_projects")
    # ### end Alembic commands ###
