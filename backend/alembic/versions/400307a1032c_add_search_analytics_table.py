"""Add search analytics table

Revision ID: 400307a1032c
Revises: c5d7e8a9b2c3
Create Date: 2025-09-13 19:40:49.478487

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "400307a1032c"
down_revision = "c5d7e8a9b2c3"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "search_analytics",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("search_id", sa.String(length=100), nullable=True),
        sa.Column("user_id", sa.String(length=100), nullable=True),
        sa.Column("session_id", sa.String(length=100), nullable=True),
        sa.Column("ip_address", sa.String(length=45), nullable=True),
        sa.Column("query_text", sa.Text(), nullable=True),
        sa.Column("query_hash", sa.String(length=64), nullable=True),
        sa.Column("search_type", sa.String(length=20), nullable=True),
        sa.Column(
            "filters_applied", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("execution_time_ms", sa.Integer(), nullable=True),
        sa.Column("total_response_time_ms", sa.Integer(), nullable=True),
        sa.Column("embedding_time_ms", sa.Integer(), nullable=True),
        sa.Column("total_results", sa.Integer(), nullable=True),
        sa.Column("returned_results", sa.Integer(), nullable=True),
        sa.Column("has_results", sa.String(length=10), nullable=True),
        sa.Column(
            "clicked_results", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column(
            "result_rankings", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("user_satisfaction", sa.Integer(), nullable=True),
        sa.Column("timestamp", sa.DateTime(), nullable=True),
        sa.Column("api_version", sa.String(length=10), nullable=True),
        sa.Column("client_type", sa.String(length=20), nullable=True),
        sa.Column("error_occurred", sa.String(length=10), nullable=True),
        sa.Column("error_type", sa.String(length=50), nullable=True),
        sa.Column("error_message", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_index(
        op.f("idx_ai_usage_tracking_service_type"), table_name="ai_usage_tracking"
    )
    op.drop_index(
        op.f("idx_ai_usage_tracking_timestamp"), table_name="ai_usage_tracking"
    )
    op.drop_index(
        op.f("idx_content_chunks_embedding_hnsw"),
        table_name="content_chunks",
        postgresql_ops={"embedding": "vector_cosine_ops"},
        postgresql_with={"m": "16", "ef_construction": "64"},
        postgresql_using="hnsw",
    )
    op.drop_index(
        op.f("idx_content_chunks_embedding_ivfflat"),
        table_name="content_chunks",
        postgresql_ops={"embedding": "vector_cosine_ops"},
        postgresql_with={"lists": "100"},
        postgresql_using="ivfflat",
    )
    op.drop_index(op.f("idx_content_chunks_job_id"), table_name="content_chunks")
    op.drop_index(op.f("idx_job_desc_class_lang"), table_name="job_descriptions")
    op.drop_index(
        op.f("idx_job_descriptions_classification"), table_name="job_descriptions"
    )
    op.drop_index(op.f("idx_job_descriptions_language"), table_name="job_descriptions")
    op.drop_index(op.f("idx_job_descriptions_title"), table_name="job_descriptions")
    op.drop_index(op.f("ix_saved_searches_is_favorite"), table_name="saved_searches")
    op.drop_index(op.f("ix_saved_searches_is_public"), table_name="saved_searches")
    op.drop_index(op.f("ix_saved_searches_last_used"), table_name="saved_searches")
    op.drop_index(op.f("ix_saved_searches_session_id"), table_name="saved_searches")
    op.drop_index(op.f("ix_saved_searches_use_count"), table_name="saved_searches")
    op.drop_index(op.f("ix_saved_searches_user_id"), table_name="saved_searches")
    op.drop_index(op.f("idx_system_metrics_metric_type"), table_name="system_metrics")
    op.drop_index(op.f("idx_system_metrics_timestamp"), table_name="system_metrics")
    op.drop_index(op.f("idx_usage_analytics_action_type"), table_name="usage_analytics")
    op.drop_index(op.f("idx_usage_analytics_session_id"), table_name="usage_analytics")
    op.drop_index(op.f("idx_usage_analytics_timestamp"), table_name="usage_analytics")
    op.drop_index(op.f("ix_user_preferences_session_id"), table_name="user_preferences")
    op.drop_index(op.f("ix_user_preferences_type"), table_name="user_preferences")
    op.drop_index(op.f("ix_user_preferences_user_id"), table_name="user_preferences")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(
        op.f("ix_user_preferences_user_id"),
        "user_preferences",
        ["user_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_user_preferences_type"),
        "user_preferences",
        ["preference_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_user_preferences_session_id"),
        "user_preferences",
        ["session_id"],
        unique=False,
    )
    op.create_index(
        op.f("idx_usage_analytics_timestamp"),
        "usage_analytics",
        ["timestamp"],
        unique=False,
    )
    op.create_index(
        op.f("idx_usage_analytics_session_id"),
        "usage_analytics",
        ["session_id"],
        unique=False,
    )
    op.create_index(
        op.f("idx_usage_analytics_action_type"),
        "usage_analytics",
        ["action_type"],
        unique=False,
    )
    op.create_index(
        op.f("idx_system_metrics_timestamp"),
        "system_metrics",
        ["timestamp"],
        unique=False,
    )
    op.create_index(
        op.f("idx_system_metrics_metric_type"),
        "system_metrics",
        ["metric_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_saved_searches_user_id"), "saved_searches", ["user_id"], unique=False
    )
    op.create_index(
        op.f("ix_saved_searches_use_count"),
        "saved_searches",
        ["use_count"],
        unique=False,
    )
    op.create_index(
        op.f("ix_saved_searches_session_id"),
        "saved_searches",
        ["session_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_saved_searches_last_used"),
        "saved_searches",
        ["last_used"],
        unique=False,
    )
    op.create_index(
        op.f("ix_saved_searches_is_public"),
        "saved_searches",
        ["is_public"],
        unique=False,
    )
    op.create_index(
        op.f("ix_saved_searches_is_favorite"),
        "saved_searches",
        ["is_favorite"],
        unique=False,
    )
    op.create_index(
        op.f("idx_job_descriptions_title"), "job_descriptions", ["title"], unique=False
    )
    op.create_index(
        op.f("idx_job_descriptions_language"),
        "job_descriptions",
        ["language"],
        unique=False,
    )
    op.create_index(
        op.f("idx_job_descriptions_classification"),
        "job_descriptions",
        ["classification"],
        unique=False,
    )
    op.create_index(
        op.f("idx_job_desc_class_lang"),
        "job_descriptions",
        ["classification", "language"],
        unique=False,
    )
    op.create_index(
        op.f("idx_content_chunks_job_id"), "content_chunks", ["job_id"], unique=False
    )
    op.create_index(
        op.f("idx_content_chunks_embedding_ivfflat"),
        "content_chunks",
        ["embedding"],
        unique=False,
        postgresql_ops={"embedding": "vector_cosine_ops"},
        postgresql_with={"lists": "100"},
        postgresql_using="ivfflat",
    )
    op.create_index(
        op.f("idx_content_chunks_embedding_hnsw"),
        "content_chunks",
        ["embedding"],
        unique=False,
        postgresql_ops={"embedding": "vector_cosine_ops"},
        postgresql_with={"m": "16", "ef_construction": "64"},
        postgresql_using="hnsw",
    )
    op.create_index(
        op.f("idx_ai_usage_tracking_timestamp"),
        "ai_usage_tracking",
        ["request_timestamp"],
        unique=False,
    )
    op.create_index(
        op.f("idx_ai_usage_tracking_service_type"),
        "ai_usage_tracking",
        ["service_type"],
        unique=False,
    )
    op.drop_table("search_analytics")
    # ### end Alembic commands ###
