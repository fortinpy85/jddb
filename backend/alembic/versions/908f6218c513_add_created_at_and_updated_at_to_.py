"""Add created_at and updated_at to JobDescription

Revision ID: 908f6218c513
Revises: 004
Create Date: 2025-09-12 21:20:19.129775

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "908f6218c513"
down_revision = "004"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "career_paths", "from_job_id", existing_type=sa.INTEGER(), nullable=True
    )
    op.alter_column(
        "career_paths", "to_job_id", existing_type=sa.INTEGER(), nullable=True
    )
    op.alter_column(
        "career_paths",
        "progression_type",
        existing_type=sa.VARCHAR(length=50),
        nullable=True,
    )
    op.alter_column(
        "career_paths",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.drop_index(op.f("idx_career_paths_from"), table_name="career_paths")
    op.drop_index(op.f("idx_career_paths_to"), table_name="career_paths")
    op.drop_index(op.f("idx_career_paths_type"), table_name="career_paths")
    op.alter_column(
        "classification_benchmarks",
        "classification",
        existing_type=sa.VARCHAR(length=10),
        nullable=True,
    )
    op.alter_column(
        "classification_benchmarks",
        "last_updated",
        existing_type=postgresql.TIMESTAMP(),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.drop_index(
        op.f("idx_classification_benchmarks_class"),
        table_name="classification_benchmarks",
    )
    op.drop_index(
        op.f("idx_classification_benchmarks_dept"),
        table_name="classification_benchmarks",
    )
    op.alter_column(
        "job_comparisons", "job_a_id", existing_type=sa.INTEGER(), nullable=True
    )
    op.alter_column(
        "job_comparisons", "job_b_id", existing_type=sa.INTEGER(), nullable=True
    )
    op.alter_column(
        "job_comparisons",
        "comparison_type",
        existing_type=sa.VARCHAR(length=50),
        nullable=True,
    )
    op.alter_column(
        "job_comparisons",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "job_comparisons",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.drop_index(op.f("idx_job_comparisons_job_a"), table_name="job_comparisons")
    op.drop_index(op.f("idx_job_comparisons_job_b"), table_name="job_comparisons")
    op.drop_index(op.f("idx_job_comparisons_type"), table_name="job_comparisons")
    # Drop created_at columns if they exist (they may not exist in fresh databases)
    op.execute(sa.text(
        "ALTER TABLE job_metadata DROP COLUMN IF EXISTS created_at"
    ))
    op.execute(sa.text(
        "ALTER TABLE job_sections DROP COLUMN IF EXISTS created_at"
    ))
    op.alter_column("job_skills", "job_id", existing_type=sa.INTEGER(), nullable=True)
    op.alter_column(
        "job_skills",
        "skill_category",
        existing_type=sa.VARCHAR(length=100),
        nullable=True,
    )
    op.alter_column(
        "job_skills", "skill_name", existing_type=sa.VARCHAR(length=200), nullable=True
    )
    op.alter_column(
        "job_skills", "skill_level", existing_type=sa.VARCHAR(length=50), nullable=True
    )
    op.alter_column(
        "job_skills",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.drop_index(op.f("idx_job_skills_category"), table_name="job_skills")
    op.drop_index(op.f("idx_job_skills_job_id"), table_name="job_skills")
    op.drop_index(op.f("idx_job_skills_name"), table_name="job_skills")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(
        op.f("idx_job_skills_name"), "job_skills", ["skill_name"], unique=False
    )
    op.create_index(
        op.f("idx_job_skills_job_id"), "job_skills", ["job_id"], unique=False
    )
    op.create_index(
        op.f("idx_job_skills_category"), "job_skills", ["skill_category"], unique=False
    )
    op.alter_column(
        "job_skills",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "job_skills", "skill_level", existing_type=sa.VARCHAR(length=50), nullable=False
    )
    op.alter_column(
        "job_skills", "skill_name", existing_type=sa.VARCHAR(length=200), nullable=False
    )
    op.alter_column(
        "job_skills",
        "skill_category",
        existing_type=sa.VARCHAR(length=100),
        nullable=False,
    )
    op.alter_column("job_skills", "job_id", existing_type=sa.INTEGER(), nullable=False)
    op.add_column(
        "job_sections",
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "job_metadata",
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.create_index(
        op.f("idx_job_comparisons_type"),
        "job_comparisons",
        ["comparison_type"],
        unique=False,
    )
    op.create_index(
        op.f("idx_job_comparisons_job_b"), "job_comparisons", ["job_b_id"], unique=False
    )
    op.create_index(
        op.f("idx_job_comparisons_job_a"), "job_comparisons", ["job_a_id"], unique=False
    )
    op.alter_column(
        "job_comparisons",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "job_comparisons",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "job_comparisons",
        "comparison_type",
        existing_type=sa.VARCHAR(length=50),
        nullable=False,
    )
    op.alter_column(
        "job_comparisons", "job_b_id", existing_type=sa.INTEGER(), nullable=False
    )
    op.alter_column(
        "job_comparisons", "job_a_id", existing_type=sa.INTEGER(), nullable=False
    )
    op.create_index(
        op.f("idx_classification_benchmarks_dept"),
        "classification_benchmarks",
        ["department"],
        unique=False,
    )
    op.create_index(
        op.f("idx_classification_benchmarks_class"),
        "classification_benchmarks",
        ["classification"],
        unique=False,
    )
    op.alter_column(
        "classification_benchmarks",
        "last_updated",
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "classification_benchmarks",
        "classification",
        existing_type=sa.VARCHAR(length=10),
        nullable=False,
    )
    op.create_index(
        op.f("idx_career_paths_type"),
        "career_paths",
        ["progression_type"],
        unique=False,
    )
    op.create_index(
        op.f("idx_career_paths_to"), "career_paths", ["to_job_id"], unique=False
    )
    op.create_index(
        op.f("idx_career_paths_from"), "career_paths", ["from_job_id"], unique=False
    )
    op.alter_column(
        "career_paths",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "career_paths",
        "progression_type",
        existing_type=sa.VARCHAR(length=50),
        nullable=False,
    )
    op.alter_column(
        "career_paths", "to_job_id", existing_type=sa.INTEGER(), nullable=False
    )
    op.alter_column(
        "career_paths", "from_job_id", existing_type=sa.INTEGER(), nullable=False
    )
    # ### end Alembic commands ###
